/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:39:37 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@protocol OS_dispatch_queue, OS_dispatch_source, OS_xpc_object;
#import <ApplePushService/ApplePushService-Structs.h>
@class CUTWeakReference, NSObject, NSString, NSData, NSMutableDictionary, NSMutableArray, NSArray;

@interface APSConnection : NSObject {

	CUTWeakReference* _delegateReference;
	NSObject*<OS_dispatch_queue> _ivarQueue;
	NSString* _environmentName;
	NSData* _publicToken;
	unsigned long long _messageSize;
	unsigned long long _largeMessageSize;
	NSString* _connectionPortName;
	unsigned _connectionPort;
	BOOL _enableCriticalReliability;
	BOOL _enableStatusNotifications;
	BOOL _isConnected;
	BOOL _usesAppLaunchStats;
	NSMutableDictionary* _idsToOutgoingMessages;
	unsigned long long _nextOutgoingMessageID;
	NSObject*<OS_dispatch_queue> _machQueue;
	NSObject*<OS_dispatch_source> _mach_source;
	NSObject*<OS_xpc_object> _connection;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	BOOL _everHadDelegate;
	NSMutableArray* _queuedDelegateBlocks;
	NSString* _processName;
	double _reconnectDelay;
	BOOL _isReconnectScheduled;
	BOOL _isDisconnected;
	BOOL _isShutdown;
	BOOL _isDeallocing;
	NSArray* _enabledTopics;
	NSArray* _ignoredTopics;
	NSArray* _opportunisticTopics;
	NSArray* _nonWakingTopics;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> delegateQueue;                               //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> ivarQueue;                                   //@synthesize ivarQueue=_ivarQueue - In the implementation block
@property (nonatomic,readonly) BOOL isShutdown;                                                          //@synthesize isShutdown=_isShutdown - In the implementation block
@property (assign,nonatomic) unsigned long long messageSize; 
@property (assign,nonatomic) unsigned long long largeMessageSize; 
@property (setter=_setEnabledTopics:,nonatomic,retain) NSArray * enabledTopics;                          //@synthesize enabledTopics=_enabledTopics - In the implementation block
@property (setter=_setIgnoredTopics:,nonatomic,retain) NSArray * ignoredTopics;                          //@synthesize ignoredTopics=_ignoredTopics - In the implementation block
@property (setter=_setOpportunisticTopics:,nonatomic,retain) NSArray * opportunisticTopics;              //@synthesize opportunisticTopics=_opportunisticTopics - In the implementation block
@property (setter=_setNonWakingTopics:,nonatomic,retain) NSArray * nonWakingTopics;                      //@synthesize nonWakingTopics=_nonWakingTopics - In the implementation block
@property (nonatomic,retain,readonly) NSData * publicToken; 
@property (assign,nonatomic) BOOL usesAppLaunchStats; 
@property (assign,nonatomic) id<APSConnectionDelegate> delegate; 
+(id)ck_singletonConnectionForEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 ;
+(double)keepAliveIntervalForEnvironmentName:(id)arg1 ;
+(double)serverTime;
+(SecIdentityRef)copyIdentity;
+(id)geoRegion;
+(id)_createXPCConnectionWithQueueName:(const char*)arg1 ;
+(void)_safelyCancelAndReleaseConnection:(id)arg1 ;
+(void)_blockingXPCCallWithArgumentBlock:(/*^block*/id)arg1 resultHandler:(/*^block*/id)arg2 ;
+(void)_setTokenState;
+(BOOL)isValidEnvironment:(id)arg1 ;
+(void)_flushIdentityCache;
+(void)requestCourierConnection;
+(void)invalidateDeviceIdentity;
+(id)connectionsDebuggingState;
+(void)notifySafeToSendFilter;
-(void)shutdown;
-(void)_disconnect;
-(BOOL)isConnected;
-(id)_topicListNameForLogging:(unsigned long long)arg1 ;
-(void)requestTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(void)cancelOutgoingMessage:(id)arg1 ;
-(void)_connectIfNecessary;
-(void)setEnableCriticalReliability:(BOOL)arg1 ;
-(void)_connectIfNecessaryOnIvarQueue;
-(void)_asyncOnDelegateQueueWithBlock:(/*^block*/id)arg1 ;
-(void)_deliverPublicToken:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)invalidateTokenForTopic:(id)arg1 identifier:(id)arg2 ;
-(void)setLargeMessageSize:(unsigned long long)arg1 ;
-(void)_setOpportunisticTopics:(id)arg1 ;
-(void)setEnabledTopics:(NSArray *)arg1 ;
-(id<APSConnectionDelegate>)delegate;
-(void)_deliverMessage:(id)arg1 ;
-(void)_shutdownFromDealloc;
-(NSData *)publicToken;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 ;
-(void)_setNonWakingTopics:(id)arg1 ;
-(void)_setUsesAppLaunchStats:(BOOL)arg1 sendToDaemon:(BOOL)arg2 ;
-(void)_deliverDidReconnectOnIvarQueue;
-(void)sendFakeMessage:(id)arg1 ;
-(void)_cancelConnection;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 nonWakingTopics:(id)arg4 completion:(/*^block*/id)arg5 ;
-(NSObject*<OS_dispatch_queue>)ivarQueue;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(NSArray *)nonWakingTopics;
-(void)_noteDisconnectedFromDaemonOnIvarQueue;
-(void)scheduleInRunLoop:(id)arg1 ;
-(id)initWithEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 queue:(id)arg3 ;
-(void)_setEnableCriticalReliability:(BOOL)arg1 sendToDaemon:(BOOL)arg2 ;
-(void)_setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 nonWakingTopics:(id)arg4 sendToDaemon:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(void)_handleEvent:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(NSArray *)opportunisticTopics;
-(void)_setIgnoredTopics:(id)arg1 ;
-(id)initWithEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 ;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 nonWakingTopics:(id)arg4 ;
-(id)_listForIdentifierOnIvarQueue:(unsigned long long)arg1 ;
-(void)_setEnabledTopics:(id)arg1 ;
-(void)setDelegate:(id<APSConnectionDelegate>)arg1 ;
-(void)_deliverToken:(id)arg1 forTopic:(id)arg2 identifier:(id)arg3 ;
-(void)requestKeepAlive;
-(void)_disconnectFromDealloc;
-(void)confirmReceiptForMessage:(id)arg1 ;
-(NSArray *)ignoredTopics;
-(void)setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 ;
-(unsigned long long)largeMessageSize;
-(void)_addUsesAppLaunchStatsToXPCMessage:(id)arg1 ;
-(void)_disconnectOnIvarQueue;
-(void)_addEnableCriticalReliabilityToXPCMessage:(id)arg1 ;
-(void)removeFromRunLoop;
-(void)sendOutgoingMessage:(id)arg1 ;
-(void)_onIvarQueue_setEnabledTopics:(id)arg1 ignoredTopics:(id)arg2 opportunisticTopics:(id)arg3 nonWakingTopics:(id)arg4 sendToDaemon:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(void)setNonWakingTopics:(NSArray *)arg1 ;
-(void)_setEnableStatusNotifications:(BOOL)arg1 sendToDaemon:(BOOL)arg2 ;
-(void)_dispatch_async_to_ivarQueue:(/*^block*/id)arg1 ;
-(unsigned long long)messageSize;
-(void)_sendOutgoingMessage:(id)arg1 fake:(BOOL)arg2 ;
-(void)setOpportunisticTopics:(NSArray *)arg1 ;
-(void)_reconnectIfNecessaryOnIvarQueueAfterDelay;
-(id)initWithEnvironmentName:(id)arg1 queue:(id)arg2 ;
-(void)_deliverConnectionStatusChange:(BOOL)arg1 ;
-(void)_deliverConnectionStatusFromDealloc:(BOOL)arg1 ;
-(BOOL)usesAppLaunchStats;
-(void)_deliverOutgoingMessageResultWithID:(unsigned long long)arg1 error:(id)arg2 sendRTT:(unsigned long long)arg3 ;
-(void)moveTopic:(id)arg1 fromList:(unsigned long long)arg2 toList:(unsigned long long)arg3 ;
-(void)_deliverOutgoingMessageResultWithID:(unsigned long long)arg1 checkpointTraceData:(id)arg2 error:(id)arg3 sendRTT:(unsigned long long)arg4 ackTimestamp:(unsigned long long)arg5 ;
-(id)_initWithEnvironmentName:(id)arg1 namedDelegatePort:(id)arg2 enablePushDuringSleep:(BOOL)arg3 queue:(id)arg4 ;
-(NSArray *)enabledTopics;
-(BOOL)hasIdentity;
-(void)setEnableStatusNotifications:(BOOL)arg1 ;
-(void)_cancelConnectionOnIvarQueue;
-(void)_addEnableStatusNotificationsToXPCMessage:(id)arg1 ;
-(void)_deliverPublicTokenOnIvarQueue:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(BOOL)isShutdown;
-(void)setIgnoredTopics:(NSArray *)arg1 ;
-(void)setMessageSize:(unsigned long long)arg1 ;
-(void)_shutdownOnIvarQueue;
-(void)dealloc;
-(id)initWithEnvironmentName:(id)arg1 ;
-(void)setUsesAppLaunchStats:(BOOL)arg1 ;
@end

