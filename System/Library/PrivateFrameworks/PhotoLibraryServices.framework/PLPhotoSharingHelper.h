/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:37:31 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
@interface PLPhotoSharingHelper : NSObject
+(BOOL)hasReachedLimitOfOwnedStreamsInLibrary:(id)arg1 ;
+(void)checkServerModelForAlbum:(id)arg1 photoLibrary:(id)arg2 ;
+(long long)maxSubscribersPerStream;
+(void)acceptPendingInvitationForAlbum:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(double)derivedAssetSmallDimensionLimitForType:(int)arg1 ;
+(BOOL)canCreateStreamInPhotoLibrary:(id)arg1 error:(id*)arg2 ;
+(id)videoDerivativesForAssetCollection:(id)arg1 withSpecifications:(id)arg2 ;
+(void)deleteLocalAlbumsForMSASAlbumsWithGUIDs:(id)arg1 ;
+(void)_resetServerSideConfigurationDictionary;
+(id)directoryPathForUploadActivityForAlbumGUID:(id)arg1 create:(BOOL)arg2 ;
+(id)sharingFirstName;
+(id)temporaryDerivativePathForCollectionGUID:(id)arg1 uti:(id)arg2 ;
+(void)markPendingInvitationAsSpamForAlbum:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(void)markAlbumGUIDAsViewed:(id)arg1 clearUnseenAssetsCount:(BOOL)arg2 ;
+(id)_temporaryUploadDerivativesPathForCollectionGUID:(id)arg1 pathExtension:(id)arg2 ;
+(void)_markStreamVideosAsPurgeable;
+(BOOL)debugAutoAcceptInvitation;
+(void)updateCloudSharedAlbumMetadataOnServer:(id)arg1 ;
+(void)_userDidDeleteSharedAssets:(id)arg1 ;
+(id)serverSideConfigurationDictionary;
+(id)temporaryLargeVideoDerivativePathForCollectionGUID:(id)arg1 ;
+(BOOL)sharedStreamsExplictlyDisabledForPhotoLibraryURL:(id)arg1 ;
+(void)refreshSubscriberListForAlbumGUID:(id)arg1 ;
+(void)retryOutstandingActivities;
+(void)photosPreferencesChanged;
+(unsigned)registerIdleStateChangeObserverWithToken:(int*)arg1 handler:(/*^block*/id)arg2 ;
+(void)applicationIsInForeground:(BOOL)arg1 photoLibraryURL:(id)arg2 ;
+(long long)maxSubscribedStreams;
+(BOOL)canAcceptPendingInvitationForAlbum:(id)arg1 error:(id*)arg2 ;
+(void)accountSettingsChanged;
+(void)updateLocalAlbumMetadataForMSASAlbum:(id)arg1 info:(id)arg2 ;
+(void)deleteCommentWithGUIDFromServer:(id)arg1 ;
+(long long)maxCommentsPerAsset;
+(BOOL)_sharedStreamsEnabled;
+(double)intervalBetweenPolls;
+(void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2 ;
+(void)clearCachedAccountState;
+(long long)_serverLimitValueForKey:(id)arg1 withDefaultResult:(long long)arg2 ;
+(BOOL)removeCloudSharingDirectories:(id*)arg1 ;
+(unsigned)unregisterIdleStateChangeObserverWithToken:(int)arg1 ;
+(BOOL)_sharedStreamsExplicitlyDisabled;
+(BOOL)debugDownloadMetadataOnly;
+(void)publishCloudSharedAlbumToServer:(id)arg1 ;
+(CGSize)videoPosterFrameDimension;
+(id)temporarySmallVideoDerivativePathForCollectionGUID:(id)arg1 ;
+(long long)maxOwnedStreams;
+(void)pollForAlbumListUpdatesIfNecessary;
+(void)deleteDebugBreadcrumbsForAlbumGUID:(id)arg1 ;
+(void)removeSubscribers:(id)arg1 fromOwnedAlbum:(id)arg2 ;
+(void)prioritizeDownloadsForAlbumGUID:(id)arg1 ;
+(id)temporaryVideoPosterFramePathForCollectionGUID:(id)arg1 ;
+(BOOL)hasReachedLimitOfSubscribedStreamsInLibrary:(id)arg1 ;
+(void)savePhoneInvitationFailuresForPhoneNumber:(id)arg1 inAlbum:(id)arg2 ;
+(void)deleteLocalAlbumsForMSASAlbumsWithGUID:(id)arg1 inviterAddress:(id)arg2 ;
+(BOOL)sharedStreamsEnabledForPhotoLibraryURL:(id)arg1 ;
+(BOOL)debugAlwaysStreamSharedVideos;
+(BOOL)_recentlyRequestedDownloadAsset:(id)arg1 cloudPlaceholderKind:(short)arg2 ;
+(void)forgetSharingPersonID:(id)arg1 ;
+(id)_localizationKeyForAssets:(id)arg1 ;
+(id)_processPhoneFailuresQueue;
+(BOOL)debugDownloadAllDerivatives;
+(id)_pathToServerConfigurationCache;
+(void)_userDidDeleteSharedAlbum:(id)arg1 ;
+(unsigned long long)purgeSpace:(unsigned long long)arg1 ;
+(id)sharingDisplayNameIncludingEmail:(BOOL)arg1 allowsEmail:(BOOL)arg2 ;
+(void)pollForAlbumListUpdates;
+(CGSize)derivedAssetSizeForMasterSizeWidth:(double)arg1 height:(double)arg2 derivativeType:(int)arg3 withSpecificationInfo:(id)arg4 ;
+(void)resetAllLocalState;
+(void)updateSharedAlbumsCachedServerConfigurationLimits;
+(void)writeUploadDebugBreadcrumbForAssetCollections:(id)arg1 state:(int)arg2 error:(id)arg3 ;
+(void)initializeMSPlatform;
+(long long)maxVideoLengthForPublishing;
+(void)unsubscribeFromAlbum:(id)arg1 ;
+(void)pruneCloudSharingContentIfNecessaryInLibrary:(id)arg1 ;
+(id)sharingLastName;
+(id)temporaryVideoPathForCollectionGUID:(id)arg1 ;
+(unsigned long long)purgeableSpace;
+(id)sharingUsername;
+(long long)maxNumDerivativesToDownloadPerPush;
+(void)declinePendingInvitationForAlbum:(id)arg1 ;
+(id)downloadNotificationForAssetwithUUID:(id)arg1 cloudPlaceholderKind:(short)arg2 ;
+(BOOL)isCellularConnection;
+(id)derivativesForMasterAsset:(id)arg1 withSpecifications:(id)arg2 ;
+(id)_downloadRequestQueue;
+(void)enqueueCloudSharedAssetsForPublishToServer:(id)arg1 inSharedAlbum:(id)arg2 ;
+(void)deleteCloudSharedAlbumFromServer:(id)arg1 ;
+(long long)maxNumDerivativesToPrefetchPerDay;
+(long long)maxAssetsPerStream;
+(BOOL)canSetUserCloudSharedLiked:(BOOL)arg1 forAssets:(id)arg2 error:(id*)arg3 ;
+(void)publishCloudSharedCommentToServer:(id)arg1 ;
+(id)prefixForBreadcrumbState:(int)arg1 ;
+(BOOL)debugDownloadThumbnailsOnly;
+(void)updateCloudSharedAlbumMultipleContributorsStateOnServer:(id)arg1 ;
+(long long)maxCharactersPerComment;
+(id)_transactionWithName:(const char*)arg1 ;
+(void)writeAlbumNameBreadCrumb:(id)arg1 forAlbumGUID:(id)arg2 isUpload:(BOOL)arg3 ;
+(long long)maxGIFSizeForPublishing;
+(id)sharingPersonID;
+(long long)maxNumThumbnailsToPrefetchPerDay;
+(void)deleteCloudSharedAssetsFromServer:(id)arg1 inSharedAlbum:(id)arg2 ;
+(void)requestVideoPlaybackURLForAsset:(id)arg1 videoType:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
+(void)downloadAsset:(id)arg1 cloudPlaceholderKind:(short)arg2 shouldPrioritize:(BOOL)arg3 shouldExtendTimer:(BOOL)arg4 ;
+(void)sendPendingInvitationsForNewlyCreatedAlbum:(id)arg1 ;
+(id)_phoneInvitationFailureFile;
+(void)writeDownloadDebugBreadcrumbForAsset:(id)arg1 albumGUID:(id)arg2 content:(id)arg3 state:(int)arg4 error:(id)arg5 ;
+(void)updateCloudSharedAlbumPublicURLStateOnServer:(id)arg1 ;
+(id)temporaryThumbnailPathForCollectionGUID:(id)arg1 ;
+(BOOL)isBreadcrumbDebugEnabled;
+(BOOL)hasPhoneInvitationForAlbum:(id)arg1 ;
+(id)directoryPathForDownloadActivityForAlbumGUID:(id)arg1 create:(BOOL)arg2 ;
+(BOOL)_derivativeExistsForAsset:(id)arg1 cloudPlaceholderKind:(short)arg2 ;
+(id)_videoDerivativeForVideoAtURL:(id)arg1 outputURL:(id)arg2 withPreset:(id)arg3 reason:(id)arg4 outputFileType:(id)arg5 ;
+(BOOL)accountMatchesEmail:(id)arg1 ;
+(void)handlePhoneInvitationFailuresWithCompletionBlock:(/*^block*/id)arg1 ;
+(double)intervalBetweenAlbumPolls;
+(id)streamdVideoCache;
@end

