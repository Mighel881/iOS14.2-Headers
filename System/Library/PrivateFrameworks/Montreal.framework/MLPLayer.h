/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:38:10 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/Montreal.framework/Montreal
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


#import <Montreal/Montreal-Structs.h>
@class NSString, MontrealNNModelNode, MPSKernel, MLPNetwork;

@interface MLPLayer : NSObject {

	int _neuronType;
	float _neuronA;
	float _neuronB;
	float _neuronC;
	NSString* _name;
	unsigned long long _layerType;
	MontrealNNModelNode* _node;
	unsigned long long _inputLength;
	unsigned long long _inputChannels;
	unsigned long long _outputChannels;
	unsigned long long _outputLength;
	MPSKernel* _forwardKernel;
	MPSKernel* _secondaryForwardKernel;
	MPSKernel* _primaryGradientKernel;
	MPSKernel* _secondaryGradientKernel;
	MLPLayer* _previousLayer;
	MLPLayer* _nextLayer;
	MLPNetwork* _network;

}

@property (readonly) NSString * name;                                //@synthesize name=_name - In the implementation block
@property (readonly) unsigned long long layerType;                   //@synthesize layerType=_layerType - In the implementation block
@property (retain) MontrealNNModelNode * node;                       //@synthesize node=_node - In the implementation block
@property (readonly) int neuronType;                                 //@synthesize neuronType=_neuronType - In the implementation block
@property (readonly) float neuronA;                                  //@synthesize neuronA=_neuronA - In the implementation block
@property (readonly) float neuronB;                                  //@synthesize neuronB=_neuronB - In the implementation block
@property (readonly) float neuronC;                                  //@synthesize neuronC=_neuronC - In the implementation block
@property (assign) unsigned long long inputLength;                   //@synthesize inputLength=_inputLength - In the implementation block
@property (assign) unsigned long long inputChannels;                 //@synthesize inputChannels=_inputChannels - In the implementation block
@property (assign) unsigned long long outputChannels;                //@synthesize outputChannels=_outputChannels - In the implementation block
@property (assign) unsigned long long outputLength;                  //@synthesize outputLength=_outputLength - In the implementation block
@property (retain) MPSKernel * forwardKernel;                        //@synthesize forwardKernel=_forwardKernel - In the implementation block
@property (retain) MPSKernel * secondaryForwardKernel;               //@synthesize secondaryForwardKernel=_secondaryForwardKernel - In the implementation block
@property (retain) MPSKernel * primaryGradientKernel;                //@synthesize primaryGradientKernel=_primaryGradientKernel - In the implementation block
@property (retain) MPSKernel * secondaryGradientKernel;              //@synthesize secondaryGradientKernel=_secondaryGradientKernel - In the implementation block
@property (__weak) MLPLayer * previousLayer;                         //@synthesize previousLayer=_previousLayer - In the implementation block
@property (__weak) MLPLayer * nextLayer;                             //@synthesize nextLayer=_nextLayer - In the implementation block
@property (__weak) MLPNetwork * network;                             //@synthesize network=_network - In the implementation block
+(id)layerWithMontrealNode:(id)arg1 modelContainer:(void*)arg2 ;
-(int)neuronType;
-(MontrealNNModelNode *)node;
-(MLPNetwork *)network;
-(void)setNode:(MontrealNNModelNode *)arg1 ;
-(unsigned long long)layerType;
-(float)neuronA;
-(float)neuronB;
-(float)neuronC;
-(NSString *)name;
-(void)setNetwork:(MLPNetwork *)arg1 ;
-(void)setInputLength:(unsigned long long)arg1 ;
-(void)setInputChannels:(unsigned long long)arg1 ;
-(void)updatePreviousLayer:(id)arg1 nextLayer:(id)arg2 network:(id)arg3 ;
-(unsigned long long)inputLength;
-(unsigned long long)inputChannels;
-(unsigned long long)outputLength;
-(id)generateNode:(id)arg1 model:(id)arg2 weightIter:(unsigned long long*)arg3 ;
-(id)initWithLayerType:(unsigned long long)arg1 name:(id)arg2 neuronType:(int)arg3 neuronParams:(id)arg4 ;
-(id)initWithLayerType:(unsigned long long)arg1 name:(id)arg2 parameters:(SCD_Struct_Mo4*)arg3 ;
-(void)setOutputLength:(unsigned long long)arg1 ;
-(void)setForwardKernel:(MPSKernel *)arg1 ;
-(void)setPrimaryGradientKernel:(MPSKernel *)arg1 ;
-(MPSKernel *)forwardKernel;
-(MPSKernel *)primaryGradientKernel;
-(void)createKernel;
-(id)initWithName:(id)arg1 parameters:(SCD_Struct_Mo4*)arg2 ;
-(id)forward:(id)arg1 input:(id)arg2 labels:(id)arg3 runInference:(BOOL)arg4 ;
-(id)backward:(id)arg1 inputGradient:(id)arg2 ;
-(id)seqForward:(id)arg1 input:(id)arg2 dataBatch:(id)arg3 runInference:(BOOL)arg4 ;
-(id)seqBackward:(id)arg1 dataBatch:(id)arg2 inputGradient:(id)arg3 ;
-(int)mpsNeuronTypeFromMontrealType:(long long)arg1 ;
-(void)setNextLayer:(MLPLayer *)arg1 ;
-(void)setPreviousLayer:(MLPLayer *)arg1 ;
-(id)generateNode:(id)arg1 model:(id)arg2 weightIter:(unsigned long long*)arg3 params:(SCD_Struct_Mo4*)arg4 inputChunks:(id)arg5 outputChunks:(id)arg6 ;
-(void)printMatrix:(id)arg1 name:(id)arg2 cmdBuf:(id)arg3 ;
-(long long)montrealTypeFromMPSNeuronType:(int)arg1 ;
-(MPSKernel *)secondaryForwardKernel;
-(void)setSecondaryForwardKernel:(MPSKernel *)arg1 ;
-(MPSKernel *)secondaryGradientKernel;
-(void)setSecondaryGradientKernel:(MPSKernel *)arg1 ;
-(MLPLayer *)previousLayer;
-(unsigned long long)outputChannels;
-(void)setOutputChannels:(unsigned long long)arg1 ;
-(MLPLayer *)nextLayer;
@end

