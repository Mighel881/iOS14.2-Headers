/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:35:23 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/Frameworks/Contacts.framework/Contacts
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <Contacts/Contacts-Structs.h>
#import <libobjc.A.dylib/CNUIURLDestinationID.h>
#import <libobjc.A.dylib/CNObjectValidation.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSString;

@interface CNPhoneNumber : NSObject <CNUIURLDestinationID, CNObjectValidation, NSCopying, NSSecureCoding> {

	NSString* _initialCountryCode;
	NSString* _stringValue;
	os_unfair_lock_s _stateLock;
	CFPhoneNumberRef _phoneNumberRef;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * initialCountryCode;                               //@synthesize initialCountryCode=_initialCountryCode - In the implementation block
@property (nonatomic,copy,readonly) NSString * countryCode; 
@property (nonatomic,copy,readonly) NSString * digits; 
@property (nonatomic,copy,readonly) NSString * formattedStringValue; 
@property (nonatomic,copy,readonly) NSString * formattedInternationalStringValue; 
@property (nonatomic,copy,readonly) NSString * unformattedInternationalStringValue; 
@property (nonatomic,copy,readonly) NSString * stringValue;                                      //@synthesize stringValue=_stringValue - In the implementation block
+(id)phoneNumberWithStringValue:(id)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)defaultCountryCode;
+(id)phoneNumberWithCopiedStringValue:(id)arg1 ;
+(id)phoneNumberWithDigits:(id)arg1 countryCode:(id)arg2 ;
+(/*^block*/id)StringValue;
+(CFPhoneNumberRef)createCFPhoneNumberForStringValue:(id)arg1 countryCode:(id)arg2 ;
+(BOOL)_isCountryCodeForNorthAmericanDialingPlan:(id)arg1 ;
+(id)_countryCodesForNorthAmericanDialingPlan;
+(id)dialingCodeForISOCountryCode:(id)arg1 ;
+(id)_countryCodeForNorthAmericanDialingPlanAreaCodesExcludingUS;
+(id)unsupportedCountryCodes;
+(id)new;
-(id)_cnui_URLDestinationID;
-(NSString *)formattedInternationalStringValue;
-(id)init;
-(NSString *)stringValue;
-(unsigned long long)hash;
-(id)initWithStringValue:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)isLikePhoneNumber:(id)arg1 ;
-(BOOL)isLikePhoneNumberForSamePerson:(id)arg1 ;
-(NSString *)countryCode;
-(NSString *)digits;
-(NSString *)description;
-(BOOL)isEqual:(id)arg1 ;
-(NSString *)formattedStringValue;
-(NSString *)unformattedInternationalStringValue;
-(id)initWithCoder:(id)arg1 ;
-(BOOL)isValid:(id*)arg1 ;
-(id)lastFourDigits;
-(id)primitiveInitWithStringValue:(id)arg1 countryCode:(id)arg2 ;
-(BOOL)isFullyQualified;
-(id)initWithStringValue:(id)arg1 countryCode:(id)arg2 ;
-(NSString *)initialCountryCode;
-(CFPhoneNumberRef)nts_lazyPhoneNumberRef;
-(id)stringValueWithCFPhoneNumberOptions:(unsigned long long)arg1 ;
-(id)_countryCodeFromPhoneNumberRef;
-(id)fullyQualifiedDigits;
-(id)digitsRemovingDialingCode;
-(id)formattedStringValueRemovingDialingCode;
-(CFPhoneNumberRef)phoneNumberRef;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
@end

