/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:34:22 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <CFNetwork/CFNetwork-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/__NSURLSessionTaskGroupForConfiguration.h>

@protocol OS_dispatch_queue, NSURLSessionDelegate;
@class __CFN_ConnectionContextManager, NSDictionary, NSOperationQueue, NSObject, NSString, NSURLSessionConfiguration, NSUUID, NSMutableSet, NSMutableDictionary, __CFN_SessionMetrics;

@interface NSURLSession : NSObject <NSCopying, __NSURLSessionTaskGroupForConfiguration> {

	__CFN_ConnectionContextManager* _nwContextManager;
	shared_ptr<NSObject<OS_nw_context> >* _nwContext;
	NSDictionary* _atsState_ivar;
	os_unfair_lock_s _lock;
	BOOL _invalid_ivar;
	BOOL _isSharedSession_ivar;
	NSOperationQueue* _delegateQueue_ivar;
	NSObject*<OS_dispatch_queue> _delegateDispatchQueue;
	id<NSURLSessionDelegate> _delegate_ivar;
	NSString* _sessionDescription_ivar;
	NSURLSessionConfiguration* _local_immutable_configuration_ivar;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSUUID* _uuid_ivar;
	NSString* _tlsSessionCachePrefix;
	NSMutableSet* _h1FallbackHosts;
	NSMutableDictionary* _coalescing;
	__CFN_SessionMetrics* _metrics;

}

@property (nonatomic,copy) NSString * _tlsSessionCachePrefix;                             //@synthesize tlsSessionCachePrefix=_tlsSessionCachePrefix - In the implementation block
@property (readonly) unsigned long long nextSeed; 
@property (retain,readonly) NSOperationQueue * delegateQueue; 
@property (retain,readonly) id<NSURLSessionDelegate> delegate;                            //@synthesize delegate_ivar=_delegate_ivar - In the implementation block
@property (copy,readonly) NSURLSessionConfiguration * configuration; 
@property (copy) NSString * sessionDescription;                                           //@synthesize sessionDescription_ivar=_sessionDescription_ivar - In the implementation block
@property (__weak,readonly) NSURLSessionConfiguration * _groupConfiguration; 
@property (__weak,readonly) NSURLSession * _groupSession; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)_obliterateAllBackgroundSessionsWithCompletionHandler:(/*^block*/id)arg1 ;
+(id)_sessionWithConfiguration:(id)arg1 delegate:(id)arg2 delegateDispatchQueue:(id)arg3 ;
+(void)_sendPendingCallbacksForSessionIdentifier:(id)arg1 ;
+(id)sessionWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3 ;
+(void)_releaseProcessAssertionForSessionIdentifier:(id)arg1 ;
+(void)_getActiveSessionIdentifiersWithCompletionHandler:(/*^block*/id)arg1 ;
+(void)_strictTrustEvaluate:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)_disableATS;
+(BOOL)_backgroundServiceAvailable;
+(id)sessionWithConfiguration:(id)arg1 ;
+(void)_setHTTPRewriter:(id)arg1 ;
+(void)_disableAppSSO;
+(void)_setEventDelegate:(id)arg1 queue:(id)arg2 ;
+(id)sharedSession;
+(id)new;
-(void)flushWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)aggregateAssetDownloadTaskWithURLAsset:(id)arg1 mediaSelections:(id)arg2 assetTitle:(id)arg3 assetArtworkData:(id)arg4 options:(id)arg5 ;
-(id)assetDownloadTaskWithURLAsset:(id)arg1 assetTitle:(id)arg2 assetArtworkData:(id)arg3 options:(id)arg4 ;
-(id)dataTaskWithRequest:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_AVAssetDownloadTaskWithURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3 ;
-(id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)assetDownloadTaskWithURLAsset:(id)arg1 destinationURL:(id)arg2 options:(id)arg3 ;
-(id)_downloadTaskWithRequest:(id)arg1 downloadFilePath:(id)arg2 ;
-(id)downloadTaskWithRequest:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)dataTaskWithURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)downloadTaskWithResumeData:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getAllTasksWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSURLSession *)_groupSession;
-(id)dataTaskWithRequest:(id)arg1 uniqueIdentifier:(id)arg2 ;
-(void)invalidateAndCancel;
-(id)init;
-(void)set_tlsSessionCachePrefix:(NSString *)arg1 ;
-(NSString *)_tlsSessionCachePrefix;
-(id)webSocketTaskWithRequest:(id)arg1 ;
-(id)uploadTaskWithStreamedRequest:(id)arg1 ;
-(id)downloadTaskWithURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id<NSURLSessionDelegate>)delegate;
-(id)defaultTaskGroup;
-(NSURLSessionConfiguration *)_groupConfiguration;
-(void)getTasksWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)webSocketTaskWithURL:(id)arg1 protocols:(id)arg2 ;
-(id)streamTaskWithHostName:(id)arg1 port:(long long)arg2 ;
-(id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 ;
-(id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 ;
-(void)setSessionDescription:(NSString *)arg1 ;
-(void)resetWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)downloadTaskWithResumeData:(id)arg1 ;
-(id)streamTaskWithNetService:(id)arg1 ;
-(id)taskGroupWithConfiguration:(id)arg1 ;
-(id)dataTaskWithURL:(id)arg1 ;
-(id)downloadTaskWithRequest:(id)arg1 ;
-(id)downloadTaskWithURL:(id)arg1 ;
-(NSString *)sessionDescription;
-(id)initWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3 delegateDispatchQueue:(id)arg4 ;
-(void)_setEventDelegate:(id)arg1 ;
-(void)_useTLSSessionCacheFromSession:(id)arg1 ;
-(id)_dataTaskWithTaskForClass:(id)arg1 ;
-(NSOperationQueue *)delegateQueue;
-(id)webSocketTaskWithURL:(id)arg1 ;
-(void)finishTasksAndInvalidate;
-(id)_uploadTaskWithTaskForClass:(id)arg1 ;
-(id)dataTaskWithRequest:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSURLSessionConfiguration *)configuration;
-(void)dealloc;
-(id)_downloadTaskWithTaskForClass:(id)arg1 ;
@end

