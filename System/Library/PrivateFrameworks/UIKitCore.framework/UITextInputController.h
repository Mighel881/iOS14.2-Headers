/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:34:58 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <UIKitCore/UIKitCore-Structs.h>
#import <UIKit/UITextInput_Internal.h>
#import <UIKit/UITextInput.h>
#import <UIKit/UITextInputAdditions.h>
#import <UIKit/UIResponderStandardEditActions.h>
#import <UIKit/UITextInputPrivate.h>

@protocol UITextInputDelegate, UITextInput, UITextInputControllerDelegate;
@class _UITextKitTextRange, _UITextInputControllerTokenizer, NSLayoutManager, NSHashTable, _UITextServiceSession, UITextInputTraits, NSDictionary, NSAttributedString, NSArray, UIView, _UITextUndoManager, _UITextUndoOperationTyping, UITextChecker, UITextCheckingController, NSSet, UITextPlaceholder, UITextRange, UITextPosition, NSString, UITextInputPasswordRules, UITextInteractionAssistant, RTIInputSystemSourceSession, NSIndexSet, UIColor, UIImage, UIInputContextHistory;

@interface UITextInputController : NSObject <UITextInput_Internal, UITextInput, UITextInputAdditions, UIResponderStandardEditActions, UITextInputPrivate> {

	id<UITextInputDelegate> _inputDelegate;
	_UITextKitTextRange* _selectedTextRange;
	_UITextInputControllerTokenizer* _tokenizer;
	NSLayoutManager* _layoutManager;
	NSHashTable* _observedScrollViews;
	_UITextServiceSession* _learnSession;
	_UITextServiceSession* _shareSession;
	_UITextServiceSession* _lookupSession;
	UITextInputTraits* _textInputTraits;
	NSRange _markedTextRange;
	NSRange _markedTextSelection;
	NSDictionary* _markedTextStyle;
	NSAttributedString* _markedText;
	struct {
		unsigned delegateRespondsToTextInputShouldBeginEditing : 1;
		unsigned delegateRespondsToTextInputShouldChangeCharactersInRangeReplacementText : 1;
		unsigned delegateRespondsToTextInputDidChange : 1;
		unsigned delegateRespondsToTextInputDidChangeSelection : 1;
		unsigned delegateRespondsToTextInputWillChangeSelectionFromCharacterRangeToCharacterRange : 1;
		unsigned delegateRespondsToTextInputEditorDidChangeSelection : 1;
		unsigned delegateRespondsToTextInputPrepareAttributedTextForInsertion : 1;
		unsigned delegateRespondsToTextInputShouldExtendCaretHeight : 1;
		unsigned delegateRespondsToIsSingleLine : 1;
		unsigned textOrSelectionChangeOriginatesWithKeyboard : 1;
		unsigned showingTextStyleOptions : 1;
		unsigned undoRedoInProgress : 1;
		unsigned textOrSelectionChangeOriginatesWithMarkedText : 1;
		unsigned nextSelectionChangeMustUpdate : 1;
		unsigned hasTextAlternatives : 1;
		unsigned hasDictationResultMetadata : 1;
		unsigned suppressDelegateChangeNotifications : 1;
	}  _tiFlags;
	NSArray* _extraItemsBeforeTextStyleOptions;
	UIView*<UITextInput> _firstTextView;
	_UITextUndoManager* _undoManager;
	_UITextUndoOperationTyping* _undoOperationForCoalescing;
	UITextChecker* _textChecker;
	UITextCheckingController* _textCheckingController;
	NSSet* _whitelistedTypingAttributes;
	UITextPlaceholder* _textPlaceholder;
	BOOL _allowsEditingTextAttributes;
	BOOL _continuousSpellCheckingEnabled;
	BOOL _shouldStartUndoGroup;
	int _currentUndoGroupType;
	NSDictionary* _emptyStringAttributes;
	NSDictionary* _typingAttributes;
	id<UITextInputControllerDelegate> _delegate;
	NSRange _previousSelectedRange;

}

@property (getter=_proxyTextInput,nonatomic,readonly) UIResponder*<UITextInput> __content; 
@property (nonatomic,readonly) UIView*<UITextInputPrivate> _textSelectingContainer; 
@property (assign,nonatomic) NSRange previousSelectedRange;                                                                                               //@synthesize previousSelectedRange=_previousSelectedRange - In the implementation block
@property (assign,nonatomic,__weak) NSLayoutManager * layoutManager;                                                                                      //@synthesize layoutManager=_layoutManager - In the implementation block
@property (setter=_setEmptyStringAttributes:,getter=_emptyStringAttributes,nonatomic,copy) NSDictionary * emptyStringAttributes;                          //@synthesize emptyStringAttributes=_emptyStringAttributes - In the implementation block
@property (assign,nonatomic) int currentUndoGroupType;                                                                                                    //@synthesize currentUndoGroupType=_currentUndoGroupType - In the implementation block
@property (assign,nonatomic) BOOL shouldStartUndoGroup;                                                                                                   //@synthesize shouldStartUndoGroup=_shouldStartUndoGroup - In the implementation block
@property (assign,nonatomic) NSRange selectedRange; 
@property (assign,nonatomic) BOOL allowsEditingTextAttributes;                                                                                            //@synthesize allowsEditingTextAttributes=_allowsEditingTextAttributes - In the implementation block
@property (nonatomic,copy) NSDictionary * typingAttributes;                                                                                               //@synthesize typingAttributes=_typingAttributes - In the implementation block
@property (assign,nonatomic,__weak) id<UITextInputControllerDelegate> delegate;                                                                           //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL continuousSpellCheckingEnabled;                                                                                         //@synthesize continuousSpellCheckingEnabled=_continuousSpellCheckingEnabled - In the implementation block
@property (setter=_setWhitelistedTypingAttributes:,getter=_whitelistedTypingAttributes,nonatomic,copy) NSSet * _whitelistedTypingAttributes; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic,__weak) id<UITextInputDelegate> inputDelegate; 
@property (nonatomic,readonly) id<UITextInputTokenizer> tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) long long selectionAffinity; 
@property (nonatomic,readonly) id insertDictationResultPlaceholder; 
@property (nonatomic,readonly) BOOL hasText; 
@property (assign,nonatomic) long long autocapitalizationType; 
@property (assign,nonatomic) long long autocorrectionType; 
@property (assign,nonatomic) long long spellCheckingType; 
@property (assign,nonatomic) long long smartQuotesType; 
@property (assign,nonatomic) long long smartDashesType; 
@property (assign,nonatomic) long long smartInsertDeleteType; 
@property (assign,nonatomic) long long keyboardType; 
@property (assign,nonatomic) long long keyboardAppearance; 
@property (assign,nonatomic) long long returnKeyType; 
@property (assign,nonatomic) BOOL enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) BOOL secureTextEntry; 
@property (nonatomic,copy) NSString * textContentType; 
@property (nonatomic,copy) UITextInputPasswordRules * passwordRules; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isEditable,nonatomic,readonly) BOOL editable; 
@property (getter=isEditing,nonatomic,readonly) BOOL editing; 
@property (getter=_caretRect,nonatomic,readonly) CGRect caretRect; 
@property (nonatomic,readonly) UITextInteractionAssistant * interactionAssistant; 
@property (assign,nonatomic) long long selectionGranularity; 
@property (nonatomic,readonly) long long cursorBehavior; 
@property (nonatomic,readonly) id<UITextInputSuggestionDelegate> textInputSuggestionDelegate; 
@property (assign,nonatomic) long long _textInputSource; 
@property (nonatomic,readonly) RTIInputSystemSourceSession * _rtiSourceSession; 
@property (nonatomic,readonly) BOOL supportsImagePaste; 
@property (nonatomic,copy) NSString * recentInputIdentifier; 
@property (assign,nonatomic) NSRange validTextRange; 
@property (nonatomic,copy) NSIndexSet * PINEntrySeparatorIndexes; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (nonatomic,retain) UIColor * underlineColorForTextAlternatives; 
@property (nonatomic,retain) UIColor * underlineColorForSpelling; 
@property (assign,nonatomic) unsigned long long insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) BOOL isSingleLineDocument; 
@property (assign,nonatomic) BOOL contentsIsSingleValue; 
@property (assign,nonatomic) BOOL hasDefaultContents; 
@property (assign,nonatomic) BOOL acceptsPayloads; 
@property (assign,nonatomic) BOOL acceptsEmoji; 
@property (assign,nonatomic) BOOL acceptsInitialEmojiKeyboard; 
@property (assign,nonatomic) BOOL acceptsDictationSearchResults; 
@property (assign,nonatomic) BOOL useAutomaticEndpointing; 
@property (assign,nonatomic) BOOL showDictationButton; 
@property (assign,nonatomic) BOOL forceEnableDictation; 
@property (assign,nonatomic) BOOL forceDisableDictation; 
@property (assign,nonatomic) BOOL forceDefaultDictationInfo; 
@property (assign,nonatomic) long long forceDictationKeyboardType; 
@property (assign,nonatomic) BOOL preferOnlineDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) BOOL returnKeyGoesToNextResponder; 
@property (assign,nonatomic) BOOL acceptsFloatingKeyboard; 
@property (assign,nonatomic) BOOL forceFloatingKeyboard; 
@property (assign,nonatomic) UIEdgeInsets floatingKeyboardEdgeInsets; 
@property (assign,nonatomic) BOOL acceptsSplitKeyboard; 
@property (assign,nonatomic) BOOL displaySecureTextUsingPlainText; 
@property (assign,nonatomic) BOOL displaySecureEditsUsingPlainText; 
@property (assign,nonatomic) BOOL learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) BOOL suppressReturnKeyStyling; 
@property (assign,nonatomic) BOOL useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) BOOL deferBecomingResponder; 
@property (assign,nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (nonatomic,retain) UIInputContextHistory * inputContextHistory; 
@property (assign,nonatomic) BOOL disableInputBars; 
@property (assign,nonatomic) BOOL isCarPlayIdiom; 
@property (assign,nonatomic) long long textScriptType; 
@property (assign,nonatomic) BOOL loadKeyboardsForSiriLanguage; 
@property (assign,nonatomic) BOOL disablePrediction; 
@property (assign,nonatomic) BOOL hidePrediction; 
@property (assign,getter=isDevicePasscodeEntry,nonatomic) BOOL devicePasscodeEntry; 
+(BOOL)_shouldUseStandardTextScaling:(id)arg1 ;
-(void)makeTextWritingDirectionNatural:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)setSelectedTextRange:(UITextRange *)arg1 ;
-(CGRect)_selectionClipRect;
-(BOOL)isEditable;
-(void)unmarkText;
-(long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)_moveUp:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)increaseSize:(id)arg1 ;
-(id)metadataDictionariesForDictationResults;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(id)undoManager;
-(NSRange)selectedRange;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(UITextPosition *)endOfDocument;
-(void)_transpose;
-(void)setInputDelegate:(id<UITextInputDelegate>)arg1 ;
-(id)textChecker;
-(UITextInteractionAssistant *)interactionAssistant;
-(void)copy:(id)arg1 ;
-(id)_moveToEndOfDocument:(BOOL)arg1 withHistory:(id)arg2 ;
-(NSDictionary *)markedTextStyle;
-(UITextRange *)markedTextRange;
-(void)selectAll;
-(id)_moveToEndOfLine:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2 ;
-(id<UITextInputDelegate>)inputDelegate;
-(id)selectionRectsForRange:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(void)endSelectionChange;
-(id)_moveLeft:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(void)replaceRange:(id)arg1 withAttributedText:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(void)pasteAndMatchStyle:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(id<UITextInputTokenizer>)tokenizer;
-(void)insertAttributedText:(id)arg1 ;
-(void)_transliterateChinese:(id)arg1 ;
-(id)selectionView;
-(void)cut:(id)arg1 ;
-(void)beginSelectionChange;
-(BOOL)hasText;
-(CGRect)_caretRectForOffset:(unsigned long long)arg1 ;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)selectAll:(id)arg1 ;
-(void)_deleteToEndOfParagraph;
-(id)textInRange:(id)arg1 ;
-(id)insertTextPlaceholderWithSize:(CGSize)arg1 embeddingType:(long long)arg2 ;
-(void)setAttributedMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(id)_moveToEndOfParagraph:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)_attributedStringForInsertionOfAttributedString:(id)arg1 ;
-(void)deleteBackward;
-(void)insertText:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(id)attributedTextInRange:(id)arg1 ;
-(void)_forceUnmarkTextDueToEditing;
-(id)_attributesForReplacementInRange:(NSRange)arg1 ;
-(void)coalesceInTextView:(id)arg1 affectedRange:(NSRange)arg2 replacementRange:(NSRange)arg3 replacementText:(id)arg4 ;
-(id)_layoutManager;
-(BOOL)_selectionAtWordStart;
-(void)select:(id)arg1 ;
-(BOOL)_canHandleResponderAction:(SEL)arg1 ;
-(NSRange)_rangeToReplaceWhenInsertingText;
-(void)_setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(id)_characterPositionForPoint:(CGPoint)arg1 ;
-(void)_detachFromLayoutManager;
-(id)_rangeOfSmartSelectionIncludingRange:(id)arg1 ;
-(void)_selectionGeometryChanged;
-(void)_toggleFontTrait:(unsigned)arg1 ;
-(void)_scrollRectToVisible:(CGRect)arg1 animated:(BOOL)arg2 ;
-(long long)_textInputSource;
-(void)_deleteToStartOfLine;
-(BOOL)_isDisplayingShareViewController;
-(void)_updateEmptyStringAttributes;
-(void)changeWillBeUndone:(id)arg1 ;
-(void)_setWhitelistedTypingAttributes:(id)arg1 ;
-(void)alignRight:(id)arg1 ;
-(void)_ensureSelectionVisible;
-(id<UITextInputControllerDelegate>)delegate;
-(void)_insertAttributedTextWithoutClosingTyping:(id)arg1 ;
-(void)_invalidateEmptyStringAttributes;
-(id)_rangeOfTextUnit:(long long)arg1 enclosingPosition:(id)arg2 ;
-(id)_positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(BOOL)arg4 ;
-(BOOL)_selectionAtDocumentStart;
-(void)registerUndoOperationForType:(int)arg1 actionName:(id)arg2 affectedRange:(NSRange)arg3 replacementText:(id)arg4 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(void)undoDidChangeText;
-(void)_coordinateSelectionChange:(/*^block*/id)arg1 ;
-(void)_setCaretSelectionAtEndOfSelection;
-(NSRange)_selectedRangeWithinMarkedText;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)_setInternalGestureRecognizers;
-(void)_sendDelegateChangeNotificationsForText:(BOOL)arg1 selection:(BOOL)arg2 ;
-(void)updateTextAttributesWithConversionHandler:(/*^block*/id)arg1 ;
-(void)removeTextPlaceholder:(id)arg1 ;
-(void)_replaceDocumentWithText:(id)arg1 ;
-(id<UITextInputSuggestionDelegate>)textInputSuggestionDelegate;
-(BOOL)_isSystemAttachment:(id)arg1 ;
-(void)scheduleUndoOperationForType:(int)arg1 actionName:(id)arg2 previousSelectedRange:(NSRange)arg3 replacementText:(id)arg4 ;
-(id)_selectedText;
-(long long)_resolveNaturalDirection:(long long)arg1 ;
-(void)_copySelectionToClipboard;
-(void)removeAlternativesForCurrentWord;
-(id)_normalizedStringForRangeComparison:(id)arg1 ;
-(unsigned long long)_validCaretPositionFromCharacterIndex:(unsigned long long)arg1 downstream:(BOOL)arg2 ;
-(id)_textStorage;
-(UITextRange *)selectedTextRange;
-(id)_rangeSpanningTextUnit:(long long)arg1 andPosition:(id)arg2 ;
-(void)pasteItemProviders:(id)arg1 ;
-(id)_setHistory:(id)arg1 withExtending:(BOOL)arg2 withAnchor:(int)arg3 withAffinityDownstream:(BOOL)arg4 ;
-(void)_updateRangeForSmartDelete;
-(void)_changeTextAlignment:(long long)arg1 undoString:(id)arg2 ;
-(id)_moveToEndOfWord:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfWord:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_share:(id)arg1 ;
-(BOOL)_isEmptySelection;
-(void)_setAttributedMarkedText:(id)arg1 selectedRange:(NSRange)arg2 fromKeyboard:(BOOL)arg3 useTextStyle:(BOOL)arg4 ;
-(int)currentUndoGroupType;
-(void)_pasteAttributedString:(id)arg1 toRange:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_rectsForRange:(NSRange)arg1 ;
-(id)_setSelectionRangeWithHistory:(id)arg1 ;
-(id)_fullText;
-(BOOL)_range:(id)arg1 intersectsRange:(id)arg2 ;
-(void)alignCenter:(id)arg1 ;
-(id)_rangeOfLineEnclosingPosition:(id)arg1 ;
-(void)_textContainerDidChangeView:(id)arg1 ;
-(void)setCurrentUndoGroupType:(int)arg1 ;
-(void)clearText;
-(id)_positionAtStartOfWords:(unsigned long long)arg1 beforePosition:(id)arg2 ;
-(void)_expandSelectionToBackwardDeletionCluster;
-(NSRange)_selectedNSRange;
-(void)_updateFirstTextView;
-(BOOL)_usesAsynchronousProtocol;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(void)_define:(id)arg1 ;
-(void)_setSelectedTextRange:(id)arg1 ;
-(void)setMarkedTextStyle:(NSDictionary *)arg1 ;
-(void)_expandSelectionToStartOfWordBeforeCaretSelection;
-(id)_findPleasingWordBoundaryFromPosition:(id)arg1 ;
-(id)positionFromPosition:(id)arg1 offset:(long long)arg2 ;
-(void)setAllowsEditingTextAttributes:(BOOL)arg1 ;
-(BOOL)shouldStartUndoGroup;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(id)_selectedAttributedText;
-(void)_copySelectionToClipboard:(id)arg1 ;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(BOOL)_mightHaveSelection;
-(NSLayoutManager *)layoutManager;
-(id)_textColorForCaretSelection;
-(void)_invalidateTypingAttributes;
-(id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 ;
-(id)_parentScrollView;
-(BOOL)_shouldConsiderTextViewForGeometry:(id)arg1 ;
-(void)setDelegate:(id<UITextInputControllerDelegate>)arg1 ;
-(void)_deleteBackwardAndNotify:(BOOL)arg1 ;
-(void)preheatTextChecker;
-(id)_rangeOfEnclosingWord:(id)arg1 ;
-(void)_deleteForwardByWord;
-(void)_addShortcut:(id)arg1 ;
-(void)notifyTextCheckingControllerForSelectionChange;
-(BOOL)allowsEditingTextAttributes;
-(long long)selectionAffinity;
-(id)_rangeOfParagraphEnclosingPosition:(id)arg1 ;
-(void)_layoutManagerDidCompleteLayout;
-(NSRange)_selectedRange;
-(id)_fontForCaretSelection;
-(unsigned)_characterInRelationToRangedSelection:(int)arg1 ;
-(void)removeSpellingMarkersForCurrentWord;
-(id)_senderForDelegateNotifications;
-(void)_sendDelegateWillChangeNotificationsForText:(BOOL)arg1 selection:(BOOL)arg2 ;
-(id)_keyInput;
-(void)_insertAttributedText:(id)arg1 fromKeyboard:(BOOL)arg2 ;
-(void)replaceRange:(id)arg1 withAnnotatedString:(id)arg2 relativeReplacementRange:(NSRange)arg3 ;
-(NSRange)previousSelectedRange;
-(id)_moveToStartOfDocument:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2 ;
-(void)_pasteAttributedString:(id)arg1 pasteAsRichText:(BOOL)arg2 ;
-(unsigned)_characterBeforeCaretSelection;
-(void)_ensureSelectionValid;
-(id)_fullRange;
-(id)_textInputTraits;
-(void)alignJustified:(id)arg1 ;
-(id)_firstTextView;
-(BOOL)isCoalescing;
-(id)_fixupTypingAttributeForAttributes:(id)arg1 ;
-(void)_undoManagerWillUndo:(id)arg1 ;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)_unmarkText;
-(void)_selectionDidScroll:(id)arg1 ;
-(NSDictionary *)typingAttributes;
-(id)_rangeOfSentenceEnclosingPosition:(id)arg1 ;
-(id)_positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(long long)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(void)stopCoalescing;
-(BOOL)_hasMarkedTextOrRangedSelection;
-(void)_clearMarkedText;
-(void)_validateCommand:(id)arg1 forFont:(id)arg2 traits:(int)arg3 ;
-(void)undoWillChangeText;
-(id)_wordContainingCaretSelection;
-(void)setTypingAttributes:(NSDictionary *)arg1 ;
-(void)_teardownTextContainerView:(id)arg1 ;
-(void)setShouldStartUndoGroup:(BOOL)arg1 ;
-(BOOL)_undoRedoInProgress;
-(BOOL)supportLetterByLetterUndo;
-(void)_resetShowingTextStyle:(id)arg1 ;
-(void)_removeShortcutController;
-(id)attributedSubstringForMarkedRange;
-(id)insertTextPlaceholderWithSize:(CGSize)arg1 ;
-(id)_textRangeFromNSRange:(NSRange)arg1 ;
-(void)_deleteByWord;
-(void)_setSelectedRangeToEndIfNecessary;
-(id)_moveDown:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)_emptyStringAttributes;
-(unsigned)_characterInRelationToCaretSelection:(int)arg1 ;
-(NSRange)_rangeAfterCancelDictationIfNecessaryForChangeInRange:(NSRange)arg1 ;
-(long long)_selectionAffinity;
-(id)_clampedpositionFromPosition:(id)arg1 offset:(int)arg2 ;
-(void)pasteItemProviders:(id)arg1 matchesStyle:(BOOL)arg2 ;
-(id)textRangeForNSRange:(NSRange)arg1 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(id)_rangeOfText:(id)arg1 endingAtPosition:(id)arg2 ;
-(void)validateCommand:(id)arg1 ;
-(id)_positionFromPosition:(id)arg1 pastTextUnit:(long long)arg2 inDirection:(long long)arg3 ;
-(CGRect)frameForTextPlaceholder:(id)arg1 ;
-(id)_intersectionOfRange:(id)arg1 andRange:(id)arg2 ;
-(BOOL)_selectionAtDocumentEnd;
-(void)alignLeft:(id)arg1 ;
-(BOOL)_hasMarkedText;
-(id)_proxyTextInput;
-(void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2 ;
-(void)removeAnnotation:(id)arg1 forRange:(id)arg2 ;
-(void)_setSelectedTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2 ;
-(void)_setUndoRedoInProgress:(BOOL)arg1 ;
-(CGRect)_caretRect;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(NSSet *)_whitelistedTypingAttributes;
-(BOOL)_isDisplayingLookupViewController;
-(void)checkSpellingForSelectionChangeIfNecessary;
-(BOOL)continuousSpellCheckingEnabled;
-(void)_deleteForwardAndNotify:(BOOL)arg1 ;
-(id)_newAttributedStringForInsertionOfText:(id)arg1 inRange:(NSRange)arg2 ;
-(id)_moveToStartOfParagraph:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)_attributesForInsertionOfText:(NSRange)arg1 ;
-(void)checkSmartPunctuationForWordInRange:(id)arg1 ;
-(id)_moveRight:(BOOL)arg1 withHistory:(id)arg2 ;
-(id)_selectableText;
-(void)addTextAlternativesDisplayStyle:(long long)arg1 toRange:(NSRange)arg2 ;
-(int)_indexForTextPosition:(id)arg1 ;
-(void)_replaceRange:(id)arg1 withAttributedTextFromKeyboard:(id)arg2 addingUnderlinesForAlternatives:(BOOL)arg3 ;
-(void)_promptForReplace:(id)arg1 ;
-(id)_initWithLayoutManager:(id)arg1 ;
-(NSRange)_rangeForBackwardsDelete;
-(void)_setSelectedRange:(NSRange)arg1 ;
-(void)removeSpellingMarkersFromWordInRange:(id)arg1 ;
-(id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2 ;
-(unsigned)_characterAfterCaretSelection;
-(void)setLayoutManager:(NSLayoutManager *)arg1 ;
-(void)updateSelection;
-(void)_deleteToEndOfLine;
-(void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)arg1 ;
-(id)_pasteController;
-(void)_extendCurrentSelection:(int)arg1 ;
-(void)_replaceCurrentWordWithText:(id)arg1 ;
-(BOOL)shouldStartNewUndoGroup:(id)arg1 textGranularity:(long long)arg2 operationType:(int)arg3 ;
-(void)_updateRectsForPlaceholder;
-(void)didEndEditing;
-(id)_rangeFromCurrentRangeWithDelta:(NSRange)arg1 ;
-(void)_pasteAndMatchStyle:(BOOL)arg1 ;
-(BOOL)_pasteFromPasteboard:(id)arg1 andMatchStyle:(BOOL)arg2 ;
-(NSRange)markedRange;
-(BOOL)_delegateShouldChangeTextInRange:(NSRange)arg1 replacementText:(id)arg2 ;
-(BOOL)_shouldHandleResponderAction:(SEL)arg1 ;
-(id)annotatedSubstringForRange:(id)arg1 ;
-(BOOL)isEditing;
-(void)removeTextStylingFromString:(id)arg1 ;
-(void)checkSpellingForWordInRange:(id)arg1 ;
-(BOOL)_shouldPerformUICalloutBarButtonReplaceAction:(SEL)arg1 forText:(id)arg2 checkAutocorrection:(BOOL)arg3 ;
-(BOOL)_hasDictationPlaceholder;
-(void)appendUndoOperation:(id)arg1 newGroup:(BOOL)arg2 ;
-(id)insertDictationResultPlaceholder;
-(id)_itemProviderForCopyingRange:(NSRange)arg1 ;
-(void)_addToTypingAttributes:(id)arg1 value:(id)arg2 ;
-(unsigned)_characterInRelationToPosition:(id)arg1 amount:(int)arg2 ;
-(void)set_textInputSource:(long long)arg1 ;
-(void)_updateSelectionWithTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2 ;
-(void)_insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 replacingRange:(NSRange)arg3 resultLength:(unsigned long long*)arg4 ;
-(BOOL)_isDisplayingShortcutViewController;
-(long long)_opposingDirectionFromDirection:(long long)arg1 ;
-(BOOL)_isSecureTextEntry;
-(void)scrollRangeToVisible:(NSRange)arg1 ;
-(void)_selectAll;
-(NSRange)_nsrangeForTextRange:(id)arg1 ;
-(void)_insertText:(id)arg1 fromKeyboard:(BOOL)arg2 ;
-(void)removeTextPlaceholder:(id)arg1 notifyInputDelegate:(BOOL)arg2 ;
-(id)_filteredAttributedTextInRange:(NSRange)arg1 ;
-(UITextPosition *)beginningOfDocument;
-(void)toggleUnderline:(id)arg1 ;
-(BOOL)_range:(id)arg1 containsRange:(id)arg2 ;
-(long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2 ;
-(id)_moveToStartOfLine:(BOOL)arg1 withHistory:(id)arg2 ;
-(void)setContinuousSpellCheckingEnabled:(BOOL)arg1 ;
-(NSRange)nsRangeForTextRange:(id)arg1 ;
-(id)_newAttributedStringForInsertionOfAttributedText:(id)arg1 inRange:(NSRange)arg2 ;
-(void)_clearSelectionUI;
-(void)_setAttributedMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(BOOL)_isDisplayingReferenceLibraryViewController;
-(void)_pasteRawAttributedString:(id)arg1 asRichText:(BOOL)arg2 ;
-(void)_moveCurrentSelection:(int)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(BOOL)arg2 ;
-(void)forwardInvocation:(id)arg1 ;
-(void)_setupTextContainerView:(id)arg1 ;
-(void)_setGestureRecognizers;
-(void)dealloc;
-(void)_removeShareController;
-(void)setSelectedRange:(NSRange)arg1 ;
-(void)_setSelectionToPosition:(id)arg1 ;
-(void)_setEmptyStringAttributes:(id)arg1 ;
-(void)_textStorageDidProcessEditing:(id)arg1 ;
-(id)validAnnotations;
-(void)setPreviousSelectedRange:(NSRange)arg1 ;
-(void)_performWhileSuppressingDelegateNotifications:(/*^block*/id)arg1 ;
@end

