/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:37:29 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <PhotoLibraryServices/_PLGenericAlbum.h>
#import <libobjc.A.dylib/PLSearchableAssetCollection.h>
#import <libobjc.A.dylib/PLSyncableObject.h>
#import <libobjc.A.dylib/PLAlbumProtocol.h>
#import <libobjc.A.dylib/PLDerivedAlbumOrigin.h>
#import <libobjc.A.dylib/PLIndexMappersDataOrigin.h>

@protocol PLIndexMappingCache;
@class NSString, NSDate, NSMutableOrderedSet, PLPhotoLibrary, NSNumber, NSObject, NSURL, NSData, NSOrderedSet, PLManagedAsset, NSArray;

@interface PLGenericAlbum : _PLGenericAlbum <PLSearchableAssetCollection, PLSyncableObject, PLAlbumProtocol, PLDerivedAlbumOrigin, PLIndexMappersDataOrigin> {

	NSObject*<PLIndexMappingCache> _derivedAlbums[5];
	BOOL isRegisteredForChanges;
	BOOL didRegisteredWithUserInterfaceContext;

}

@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * subtitle; 
@property (nonatomic,readonly) NSString * keyAssetUUID; 
@property (nonatomic,readonly) NSDate * keyAssetCreationDate; 
@property (nonatomic,readonly) NSDate * searchableStartDate; 
@property (nonatomic,readonly) NSDate * searchableEndDate; 
@property (nonatomic,readonly) unsigned long long numberOfAssets; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain,readonly) id localID; 
@property (assign,nonatomic) short cloudLocalState; 
@property (nonatomic,readonly) PLPhotoLibrary * photoLibrary; 
@property (assign,nonatomic) short trashedState; 
@property (nonatomic,retain) NSDate * trashedDate; 
@property (nonatomic,retain) NSDate * startDate; 
@property (nonatomic,retain) NSDate * endDate; 
@property (nonatomic,retain) NSDate * creationDate; 
@property (nonatomic,retain) NSString * uuid; 
@property (assign,nonatomic) int kindValue; 
@property (nonatomic,retain) NSString * title; 
@property (nonatomic,retain) NSString * cloudGUID; 
@property (assign,nonatomic) BOOL isPinned; 
@property (assign,nonatomic) BOOL isPrototype; 
@property (assign,nonatomic) short cloudDeleteState; 
@property (nonatomic,retain) NSData * userQueryData; 
@property (nonatomic,readonly) BOOL isLibrary; 
@property (nonatomic,readonly) BOOL isCameraAlbum; 
@property (nonatomic,readonly) BOOL isSmartAlbum; 
@property (nonatomic,readonly) BOOL isUserCreated; 
@property (nonatomic,readonly) BOOL isOwnPhotoStreamAlbum; 
@property (nonatomic,readonly) BOOL isProjectAlbumRootFolder; 
@property (nonatomic,readonly) BOOL isRegularRootFolder; 
@property (nonatomic,readonly) BOOL isRecentlyAddedAlbum; 
@property (nonatomic,readonly) BOOL isUserLibraryAlbum; 
@property (nonatomic,readonly) BOOL isProjectAlbum; 
@property (nonatomic,readonly) BOOL shouldDeleteWhenEmpty; 
@property (assign,nonatomic) BOOL isRegisteredForChanges; 
@property (assign,nonatomic) BOOL didRegisteredWithUserInterfaceContext; 
@property (nonatomic,retain,readonly) NSMutableOrderedSet * mutableAssets; 
@property (nonatomic,retain,readonly) NSNumber * kind; 
@property (assign,nonatomic) BOOL hasUnseenContentBoolValue; 
@property (nonatomic,copy,readonly) NSString * name; 
@property (nonatomic,retain,readonly) NSObject * posterImage; 
@property (nonatomic,readonly) BOOL isPanoramasAlbum; 
@property (nonatomic,readonly) BOOL isPhotoStreamAlbum; 
@property (nonatomic,readonly) BOOL isCloudSharedAlbum; 
@property (nonatomic,readonly) BOOL isPendingPhotoStreamAlbum; 
@property (nonatomic,readonly) BOOL isStandInAlbum; 
@property (nonatomic,readonly) BOOL isFolder; 
@property (nonatomic,readonly) BOOL isInTrash; 
@property (nonatomic,readonly) BOOL isOwnedCloudSharedAlbum; 
@property (nonatomic,readonly) BOOL isFamilyCloudSharedAlbum; 
@property (nonatomic,readonly) BOOL isMultipleContributorCloudSharedAlbum; 
@property (nonatomic,readonly) BOOL canContributeToCloudSharedAlbum; 
@property (nonatomic,retain) NSString * importSessionID; 
@property (nonatomic,retain,readonly) NSURL * groupURL; 
@property (nonatomic,copy,readonly) id sortingComparator; 
@property (assign,nonatomic) int pendingItemsCount; 
@property (assign,nonatomic) int pendingItemsType; 
@property (assign,nonatomic) unsigned long long batchSize; 
@property (nonatomic,copy,readonly) NSString * localizedTitle; 
@property (nonatomic,retain,readonly) NSOrderedSet * assets; 
@property (nonatomic,readonly) unsigned long long approximateCount; 
@property (nonatomic,readonly) unsigned long long assetsCount; 
@property (nonatomic,readonly) unsigned long long photosCount; 
@property (nonatomic,readonly) unsigned long long videosCount; 
@property (nonatomic,readonly) BOOL isEmpty; 
@property (nonatomic,retain) PLManagedAsset * keyAsset; 
@property (nonatomic,retain) PLManagedAsset * secondaryKeyAsset; 
@property (nonatomic,retain) PLManagedAsset * tertiaryKeyAsset; 
@property (nonatomic,readonly) BOOL canShowComments; 
@property (nonatomic,readonly) BOOL canShowAvalancheStacks; 
@property (nonatomic,copy,readonly) NSArray * localizedLocationNames; 
+(id)childKeyForOrdering;
+(id)localizedRecoveredTitle;
+(id)keyPathsForValuesAffectingName;
+(id)keyPathsForValuesAffectingKindValue;
+(id)userLibraryAlbumInLibrary:(id)arg1 ;
+(id)_singletonFetchingAlbumWithKind:(int)arg1 library:(id)arg2 ;
+(id)_singletonManagedAlbumWithKind:(int)arg1 library:(id)arg2 ;
+(id)allAssetsAlbumInLibrary:(id)arg1 ;
+(id)allPanoramasAlbumInLibrary:(id)arg1 ;
+(id)allVerticalPanoramasAlbumInLibrary:(id)arg1 ;
+(id)allVideosAlbumInLibrary:(id)arg1 ;
+(id)albumsForStreamID:(id)arg1 inLibrary:(id)arg2 ;
+(id)allHorizontalPanoramasAlbumInLibrary:(id)arg1 ;
+(id)allFavoritesAlbumInLibrary:(id)arg1 ;
+(id)allPhotoStreamAssetsAlbumInLibrary:(id)arg1 ;
+(id)iTunesLibraryAlbumInLibrary:(id)arg1 ;
+(id)trashBinAlbumInLibrary:(id)arg1 ;
+(id)unableToUploadAlbumInLibrary:(id)arg1 ;
+(id)allAlbumsInLibrary:(id)arg1 ;
+(id)albumWithName:(id)arg1 inLibrary:(id)arg2 ;
+(id)_unpushedParentsOfAlbums:(id)arg1 ;
+(void)resetAlbumStateForCloudInLibrary:(id)arg1 ;
+(void)_removeAlbumsAndFolders:(id)arg1 inManagedObjectContext:(id)arg2 ;
+(void)removeAllUserAlbumsAndFoldersInLibrary:(id)arg1 ;
+(void)removeEmptyAlbumsAndFoldersForCloudResetInManagedObjectContext:(id)arg1 ;
+(void)removeTrashedAlbumsAndFoldersForCloudResetInManagedObjectContext:(id)arg1 ;
+(void)removeInvalidAlbumsAndFoldersInManagedObjectContext:(id)arg1 ;
+(id)searchIndexAllowedPredicate;
+(id)albumsMatchingPredicate:(id)arg1 expectedResultCount:(id)arg2 inLibrary:(id)arg3 ;
+(id)_insertNewAlbumWithKind:(int)arg1 title:(id)arg2 lastInterestingDate:(id)arg3 intoLibrary:(id)arg4 ;
+(id)insertNewAlbumWithTitle:(id)arg1 intoLibrary:(id)arg2 ;
+(id)insertNewSyncedEventIntoLibrary:(id)arg1 ;
+(id)insertNewProjectAlbumWithTitle:(id)arg1 documentType:(id)arg2 intoLibrary:(id)arg3 ;
+(id)insertNewSyncedEventWithTitle:(id)arg1 intoLibrary:(id)arg2 ;
+(id)insertNewCloudSharedAlbumWithTitle:(id)arg1 lastInterestingDate:(id)arg2 intoLibrary:(id)arg3 ;
+(id)insertNewLegacyFaceAlbumIntoLibrary:(id)arg1 ;
+(id)allAlbumsInManagedObjectContext:(id)arg1 ;
+(id)insertAlbumWithKind:(int)arg1 title:(id)arg2 uuid:(id)arg3 inManagedObjectContext:(id)arg4 ;
+(id)_albumsMatchingPredicate:(id)arg1 expectedResultCount:(id)arg2 inManagedObjectContext:(id)arg3 ;
+(id)albumWithObjectID:(id)arg1 inLibrary:(id)arg2 ;
+(id)insertNewSmartAlbumIntoLibrary:(id)arg1 ;
+(id)albumsWithCloudGUIDs:(id)arg1 inLibrary:(id)arg2 ;
+(id)albumWithCloudGUID:(id)arg1 inLibrary:(id)arg2 ;
+(id)albumsToUploadInitiallyInLibrary:(id)arg1 limit:(unsigned long long)arg2 ;
+(id)includeUnpushedParentsForAlbums:(id)arg1 limit:(unsigned long long)arg2 ;
+(id)defaultAlbumKindsForFetchingWithCPLEnabled:(BOOL)arg1 ;
+(id)filesystemImportProgressAlbumInLibrary:(id)arg1 ;
+(id)otaRestoreProgressAlbumInLibrary:(id)arg1 ;
+(id)syncProgressAlbumInLibrary:(id)arg1 ;
+(id)albumsWithKind:(int)arg1 inManagedObjectContext:(id)arg2 ;
+(id)insertNewAlbumWithKind:(int)arg1 title:(id)arg2 intoLibrary:(id)arg3 ;
+(id)albumWithKind:(int)arg1 inManagedObjectContext:(id)arg2 ;
+(id)rootFolderInLibrary:(id)arg1 ;
+(id)projectAlbumRootFolderInLibrary:(id)arg1 ;
+(id)localizedTitleForAlbumKind:(int)arg1 cplEnabled:(BOOL)arg2 ;
+(id)uuidFromGroupURL:(id)arg1 ;
+(id)albumWithUUID:(id)arg1 inLibrary:(id)arg2 ;
+(BOOL)is1WaySyncKind:(int)arg1 ;
+(BOOL)isSmartAlbumForKind:(int)arg1 ;
+(BOOL)isUserCreatedForKind:(int)arg1 ;
+(id)allSyncedAlbumsInManagedObjectContext:(id)arg1 ;
+(id)albumFromGroupURL:(id)arg1 photoLibrary:(id)arg2 ;
+(id)eventsWithName:(id)arg1 andImportSessionIdentifier:(id)arg2 inManagedObjectContext:(id)arg3 ;
+(void)addSingletonObjectsToContext:(id)arg1 ;
+(id)insertNewAlbumIntoLibrary:(id)arg1 ;
+(BOOL)isFolder:(int)arg1 ;
+(id)_predicateForSupportedAlbumTypes;
+(id)baseSearchIndexPredicate;
+(id)allAlbumsRegisteredWithManagedObjectContext:(id)arg1 ;
-(BOOL)canPerformEditOperation:(unsigned long long)arg1 ;
-(unsigned long long)videosCount;
-(BOOL)supportsCloudUpload;
-(void)willSave;
-(id)childKeyForOrdering;
-(BOOL)isCloudSharedAlbum;
-(id)payloadIDForTombstone:(id)arg1 ;
-(void)setDidRegisteredWithUserInterfaceContext:(BOOL)arg1 ;
-(unsigned long long)assetsCount;
-(void)unregisterForChanges;
-(void)willTurnIntoFault;
-(void)delete;
-(void)setIsRegisteredForChanges:(BOOL)arg1 ;
-(BOOL)didRegisteredWithUserInterfaceContext;
-(NSString *)localizedTitle;
-(void)awakeFromFetch;
-(void)awakeFromInsert;
-(void)registerDerivedAlbum:(id)arg1 ;
-(void)enumerateDerivedAlbums:(/*^block*/id)arg1 ;
-(id)childManagedObject;
-(void)_applyTrashedState:(short)arg1 date:(BOOL)arg2 :(id)arg3 cascade:(BOOL)arg4 ;
-(void)repairUuidAndTitleWithRecoveryReason:(const char*)arg1 ;
-(void)_repairTitleIfEmpty;
-(id)assetsByObjectIDAtIndexes:(id)arg1 ;
-(void)updateAlbumFolderRelation:(id)arg1 inLibrary:(id)arg2 ;
-(BOOL)isProjectAlbumSupportingCloudUpload;
-(id)_prettyDescription;
-(id)payloadForChangedKeys:(id)arg1 ;
-(id)payloadID;
-(void)registerForChanges;
-(id)_searchableExtremityDateFromStart:(BOOL)arg1 ;
-(BOOL)isFolder;
-(BOOL)isRegisteredForChanges;
-(PLPhotoLibrary *)photoLibrary;
-(unsigned long long)photosCount;
-(unsigned long long)numberOfAssets;
-(BOOL)canContributeToCloudSharedAlbum;
-(void)enumerateDerivedIndexMappers:(/*^block*/id)arg1 ;
-(NSArray *)localizedLocationNames;
-(NSString *)subtitle;
-(BOOL)isLibrary;
-(id)cplAlbumChangeInPhotoLibrary:(id)arg1 ;
-(id)localID;
-(unsigned long long)count;
-(NSString *)keyAssetUUID;
-(BOOL)isEmpty;
-(void)applyPropertiesFromAlbumChange:(id)arg1 ;
-(BOOL)shouldDeleteWhenEmpty;
-(BOOL)isUserCreated;
-(unsigned long long)countForAssetsOfKind:(short)arg1 ;
-(NSString *)name;
-(NSObject *)posterImage;
-(id)_kindDescription;
-(id)_compactDebugDescription;
-(BOOL)validForPersistenceChangedForChangedKeys:(id)arg1 ;
-(NSString *)description;
-(NSURL *)groupURL;
-(BOOL)hasDerivedIndexMappers;
-(BOOL)isRegularRootFolder;
-(BOOL)canShowComments;
-(BOOL)isPendingPhotoStreamAlbum;
-(BOOL)isProjectAlbumRootFolder;
-(BOOL)canMoveToTrash;
-(BOOL)isOwnPhotoStreamAlbum;
-(void)applyTrashedState:(short)arg1 cascade:(BOOL)arg2 ;
-(void)setHasUnseenContentBoolValue:(BOOL)arg1 ;
-(BOOL)canShowAvalancheStacks;
-(id)assetUUIDsForPreviewWithCount:(unsigned long long)arg1 ;
-(int)kindValue;
-(id)sortingComparator;
-(void)reducePendingItemsCountBy:(unsigned long long)arg1 ;
-(void)batchFetchAssets:(id)arg1 ;
-(BOOL)isCameraAlbum;
-(BOOL)isPanoramasAlbum;
-(BOOL)isPhotoStreamAlbum;
-(BOOL)isStandInAlbum;
-(BOOL)isRecentlyAddedAlbum;
-(BOOL)isUserLibraryAlbum;
-(BOOL)isProjectAlbum;
-(id)momentShare;
-(unsigned long long)approximateCount;
-(BOOL)isOwnedCloudSharedAlbum;
-(BOOL)hasUnseenContentBoolValue;
-(id)_scopedIdentifier;
-(BOOL)isFamilyCloudSharedAlbum;
-(unsigned long long)searchIndexCategory;
-(NSDate *)keyAssetCreationDate;
-(NSDate *)searchableEndDate;
-(NSDate *)searchableStartDate;
-(id)searchIndexContents;
-(void)setKindValue:(int)arg1 ;
-(BOOL)isMultipleContributorCloudSharedAlbum;
-(id)cplFullRecord;
-(BOOL)isSmartAlbum;
-(BOOL)isSyncableChange;
-(void)unregisterAllDerivedAlbums;
-(void)dealloc;
-(BOOL)isInTrash;
@end

