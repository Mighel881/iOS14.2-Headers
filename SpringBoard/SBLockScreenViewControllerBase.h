//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun 22 2020 21:25:24).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <SpringBoard/SBApplicationHosting-Protocol.h>
#import <SpringBoard/SBAutoUnlockRule-Protocol.h>
#import <SpringBoard/SBBiometricUnlockBehavior-Protocol.h>
#import <SpringBoard/SBButtonEventsHandler-Protocol.h>
#import <SpringBoard/SBCoverSheetSlidingViewControllerContentViewController-Protocol.h>
#import <SpringBoard/SBIdleTimerProviding-Protocol.h>
#import <SpringBoard/SBLockScreenBacklightControlling-Protocol.h>
#import <SpringBoard/SBLockScreenBehaviorSuppressing-Protocol.h>
#import <SpringBoard/SBLockScreenBlockedStateObserving-Protocol.h>
#import <SpringBoard/SBLockScreenButtonObserving-Protocol.h>
#import <SpringBoard/SBLockScreenCallHandling-Protocol.h>
#import <SpringBoard/SBLockScreenContentStateProviding-Protocol.h>
#import <SpringBoard/SBLockScreenCustomActionStoring-Protocol.h>
#import <SpringBoard/SBLockScreenIdleTimerControlling-Protocol.h>
#import <SpringBoard/SBLockScreenLockingAndUnlocking-Protocol.h>
#import <SpringBoard/SBLockScreenMediaControlsPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenPasscodeViewPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenPluginPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenProximityBehaviorProviding-Protocol.h>
#import <SpringBoard/SBLockScreenStatusBarTransitioning-Protocol.h>

@class NSString, SBFLockScreenActionContext, SBFLockScreenWakeAnimator, UIVisualEffectView;
@protocol SBBiometricUnlockBehaviorDelegate, SBIdleTimerCoordinating;

@interface SBLockScreenViewControllerBase : UIViewController <SBApplicationHosting, SBAutoUnlockRule, SBBiometricUnlockBehavior, SBButtonEventsHandler, SBCoverSheetSlidingViewControllerContentViewController, SBIdleTimerProviding, SBLockScreenBacklightControlling, SBLockScreenBehaviorSuppressing, SBLockScreenBlockedStateObserving, SBLockScreenButtonObserving, SBLockScreenCallHandling, SBLockScreenContentStateProviding, SBLockScreenCustomActionStoring, SBLockScreenIdleTimerControlling, SBLockScreenLockingAndUnlocking, SBLockScreenMediaControlsPresenting, SBLockScreenPasscodeViewPresenting, SBLockScreenPluginPresenting, SBLockScreenProximityBehaviorProviding, SBLockScreenStatusBarTransitioning>
{
    SBFLockScreenActionContext *_customLockScreenActionContext;
    _Bool _authenticated;
    _Bool _expectsFaceContact;
    id <SBIdleTimerCoordinating> _idleTimerCoordinator;
    double _backlightLevel;
    id <SBBiometricUnlockBehaviorDelegate> _biometricUnlockBehaviorDelegate;
    UIVisualEffectView *_wakeEffectView;
    SBFLockScreenWakeAnimator *_lockScreenWakeAnimator;
}


// Remaining properties
@property(nonatomic, getter=isAuthenticated) _Bool authenticated; // @synthesize authenticated=_authenticated;
@property(nonatomic) double backlightLevel; // @synthesize backlightLevel=_backlightLevel;
@property(nonatomic) __weak id <SBBiometricUnlockBehaviorDelegate> biometricUnlockBehaviorDelegate; // @synthesize biometricUnlockBehaviorDelegate=_biometricUnlockBehaviorDelegate;
@property(readonly, nonatomic) _Bool contentOccludesBackground;
@property(retain, nonatomic, getter=_customLockScreenActionContext) SBFLockScreenActionContext *customLockScreenActionContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool expectsFaceContact; // @synthesize expectsFaceContact=_expectsFaceContact;
@property(readonly) unsigned long long hash;
@property(nonatomic) __weak id <SBIdleTimerCoordinating> idleTimerCoordinator; // @synthesize idleTimerCoordinator=_idleTimerCoordinator;
@property(readonly, nonatomic) SBFLockScreenWakeAnimator *lockScreenWakeAnimator; // @synthesize lockScreenWakeAnimator=_lockScreenWakeAnimator;
@property(readonly, nonatomic) _Bool shouldShowLockStatusBarTime;
@property(nonatomic, getter=isShowingMediaControls) _Bool showingMediaControls;
@property(readonly) Class superclass;
@property(nonatomic) __weak UIVisualEffectView *wakeEffectView; // @synthesize wakeEffectView=_wakeEffectView;
@end

