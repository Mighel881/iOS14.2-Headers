/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 1:45:02 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/SBHLibraryCategoryMapProviderSourceDelegate.h>

@protocol OS_dispatch_queue, SBHLibraryCategoryMapProviderSource;
@class NSHashTable, NSObject, NSString, NSMutableSet, NSMutableArray, NSArray, SBHLibraryCategoryMap;

@interface SBHLibraryCategoryMapProvider : NSObject <SBHLibraryCategoryMapProviderSourceDelegate> {

	NSHashTable* _observers;
	NSObject*<OS_dispatch_queue> _serializationQueue;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSObject*<OS_dispatch_queue> _workQueue;
	id<SBHLibraryCategoryMapProviderSource> _libraryCategoryMapProviderSource;
	NSString* _cacheFilePath;
	NSMutableSet* _forbiddenApplicationIdentifiers;
	NSMutableArray* _pendingRefreshRequests;
	NSArray* _inflightRefreshRequests;
	BOOL _refreshIsScheduled;
	BOOL _isCategoryMapOverriddenForTesting;
	long long _sessionIdentifier;
	id _clearCacheNotificationHandle;
	SBHLibraryCategoryMap* _libraryCategoryMap;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> workQueue;                  //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,readonly) SBHLibraryCategoryMap * libraryCategoryMap;              //@synthesize libraryCategoryMap=_libraryCategoryMap - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)categoryMapCacheFilePathForVersion:(id)arg1 source:(id)arg2 ;
+(id)baseFilePath;
+(id)categoryMapFromURL:(id)arg1 error:(id*)arg2 ;
+(void)clearCachesForReason:(id)arg1 ;
+(unsigned long long)derivedOptionsFromArrayOfRequests:(id)arg1 ;
+(id)cacheDirectory;
-(SBHLibraryCategoryMap *)libraryCategoryMap;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(void)removeObserver:(id)arg1 ;
-(id)initWithSource:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(void)_setupClearCacheNotification;
-(void)_kickoffInitialHydration;
-(id)_copyOfObservers;
-(void)clearOverride;
-(void)overrideCategoryMapForTesting:(id)arg1 ;
-(BOOL)_workQueue_updateLibraryCategoryMap:(id)arg1 withSessionId:(unsigned long long)arg2 shouldPersist:(BOOL)arg3 reason:(id)arg4 ;
-(id)requestLibraryCategoryMapRefreshWithOptions:(unsigned long long)arg1 reason:(id)arg2 ;
-(void)_callbackQueue_notifyObserverCategoryMapWasRefreshedWithOptions:(unsigned long long)arg1 refreshedCategoryMap:(id)arg2 ;
-(void)_workQueue_queueUpNextRequests:(id)arg1 runNow:(BOOL)arg2 ;
-(BOOL)hasCachedLibraryCategoryMapOnFileSystem;
-(void)_workQueue_performNextRequest;
-(void)_callbackQueue_notifyObserversFinishedRefreshSession:(long long)arg1 requests:(id)arg2 ;
-(void)_workQueue_scheduleRefreshIfNotScheduled;
-(void)_callbackQueue_notifyObserversWillReEnqueueFailedRequests:(id)arg1 ;
-(void)_callbackQueue_notifyObserversWillSunsetFailedRequests:(id)arg1 ;
-(void)_callbackQueue_notifyObserversCategoryMapRefreshFailedWithError:(id)arg1 ;
-(void)_callbackQueue_notifyObserversCategoryMapDidntNeedRefresh;
-(void)_callbackQueue_notifyObserversBeginningRefreshSession:(long long)arg1 requests:(id)arg2 ;
-(void)_workQueue_cancelAnyScheduledRefresh;
-(void)_callbackQueue_notifyObserversWillRefresh:(long long)arg1 options:(unsigned long long)arg2 ;
-(void)overrideCategoryMapForTestingAtURL:(id)arg1 error:(id*)arg2 ;
-(void)resetForbiddenApplicationIdentifiers;
-(BOOL)forbidApplicationIdentifier:(id)arg1 ;
-(BOOL)unforbidApplicationIdentifier:(id)arg1 ;
-(void)requestLibraryCategoryMapUpdateWithRefreshOptions:(unsigned long long)arg1 source:(id)arg2 ;
-(unsigned long long)_nextSessionIdentifier;
@end

