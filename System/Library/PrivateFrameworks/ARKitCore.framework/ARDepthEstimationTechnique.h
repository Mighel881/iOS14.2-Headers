/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:44:02 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/ARKitCore.framework/ARKitCore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <ARKitCore/ARKitCore-Structs.h>
#import <ARKitCore/ARMLImageProcessingTechnique.h>
#import <ARKitCore/ARTechniqueBusyState.h>
#import <ARKitCore/ARMLDepthDataSourceProvider.h>

@class ARImageRotationTechnique, ARImageCroppingTechnique, NSString;

@interface ARDepthEstimationTechnique : ARMLImageProcessingTechnique <ARTechniqueBusyState, ARMLDepthDataSourceProvider> {

	CVPixelBufferPoolRef _outputPixelBufferPool;
	CVPixelBufferPoolRef _scaledOutputPixelBufferPool;
	CVPixelBufferPoolRef _alphaChannelPixelBufferPool;
	ARImageRotationTechnique* _rotationTechnique;
	ARImageCroppingTechnique* _imageCroppingTechnique;

}

@property (nonatomic,readonly) BOOL isBusy; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) long long depthDataSource; 
-(id)init;
-(void)dealloc;
-(id)_fullDescription;
-(double)requiredTimeInterval;
-(id)resultDataClasses;
-(void)_startLoadingMLModelSignpost;
-(void)_endLoadingMLModelSignpost;
-(void)_startMLProcessingSignpostWithTimestamp:(double)arg1 ;
-(void)_endMLProcessingSignpostWithTimestamp:(double)arg1 ;
-(void)_startMLRunNetworkSignpostWithTimestamp:(double)arg1 ;
-(void)_endMLRunNetworkSignpostWithTimestamp:(double)arg1 ;
-(void)_startMLCreateResultSignpostWithTimestamp:(double)arg1 orientation:(long long)arg2 outputSize:(CGSize)arg3 ;
-(void)_endMLCreateResultSignpostWithTimestamp:(double)arg1 ;
-(id)createResultDataFromTensors:(SCD_Struct_AR21*)arg1 numberOfOutputTensors:(unsigned long long)arg2 imageDataForNeuralNetwork:(id)arg3 inputImageData:(id)arg4 rotationNeeded:(long long)arg5 regionOfInterest:(CGSize)arg6 ;
-(long long)depthDataSource;
-(void)networkModeDidChange:(id)arg1 toMode:(id)arg2 ;
-(long long)numberOfInputChannelsToExpectInNetwork;
@end

