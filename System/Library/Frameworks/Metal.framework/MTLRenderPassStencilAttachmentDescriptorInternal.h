/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:38:53 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/Frameworks/Metal.framework/Metal
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <Metal/Metal-Structs.h>
#import <Metal/MTLRenderPassStencilAttachmentDescriptor.h>

@interface MTLRenderPassStencilAttachmentDescriptorInternal : MTLRenderPassStencilAttachmentDescriptor {

	MTLRenderPassAttachmentDescriptorPrivate _private;

}
+(id)attachmentDescriptor;
-(void)setDepthPlane:(unsigned long long)arg1 ;
-(void)setTexture:(id)arg1 ;
-(id)texture;
-(id)formattedDescription:(unsigned long long)arg1 ;
-(unsigned)clearStencil;
-(id)init;
-(BOOL)yInvert;
-(unsigned long long)hash;
-(void)setClearStencil:(unsigned)arg1 ;
-(unsigned long long)resolveSlice;
-(void)setSlice:(unsigned long long)arg1 ;
-(unsigned long long)stencilResolveFilter;
-(void)setStencilResolveFilter:(unsigned long long)arg1 ;
-(void)setResolveDepthPlane:(unsigned long long)arg1 ;
-(unsigned long long)storeActionOptions;
-(id)description;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)loadAction;
-(void)setResolveTexture:(id)arg1 ;
-(void)setLoadAction:(unsigned long long)arg1 ;
-(unsigned long long)level;
-(const MTLRenderPassAttachmentDescriptorPrivate*)_descriptorPrivate;
-(id)resolveTexture;
-(unsigned long long)resolveLevel;
-(unsigned long long)slice;
-(void)setResolveSlice:(unsigned long long)arg1 ;
-(void)setStoreAction:(unsigned long long)arg1 ;
-(void)setResolveLevel:(unsigned long long)arg1 ;
-(unsigned long long)depthPlane;
-(void)setYInvert:(BOOL)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setLevel:(unsigned long long)arg1 ;
-(unsigned long long)resolveDepthPlane;
-(unsigned long long)storeAction;
-(void)dealloc;
-(void)setStoreActionOptions:(unsigned long long)arg1 ;
@end

