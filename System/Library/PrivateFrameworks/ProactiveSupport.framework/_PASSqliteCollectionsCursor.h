/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:39:36 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@interface _PASSqliteCollectionsCursor : NSObject {

	BOOL _foundOutputRow;
	BOOL _eof;
	id _collection;

}

@property (nonatomic,retain) id collection;              //@synthesize collection=_collection - In the implementation block
+(BOOL)hasKey;
+(id)planningInfoForValueConstraint:(int)arg1 ;
+(id)planningInfoForKeyConstraint:(int)arg1 ;
+(const char*)sqliteMethodName;
+(double)baseEstimatedCost;
+(id)planningInfoForRowIdConstraint:(int)arg1 ;
+(BOOL)canOrderByRowId:(BOOL)arg1 ;
+(BOOL)canOrderByKey:(BOOL)arg1 ;
+(const char*)sqliteCreateTableStatement;
+(double)baseEstimatedRows;
+(BOOL)canOrderByValue:(BOOL)arg1 ;
+(BOOL)hasRowId;
-(id)collection;
-(void)setCollection:(id)arg1 ;
-(unsigned long long)outputRowId;
-(void)applyKeyConstraint:(int)arg1 withArgument:(id)arg2 ;
-(id)init;
-(void)applyValueSort:(BOOL)arg1 ;
-(void)applyConstraint:(int)arg1 withArgument:(id)arg2 ;
-(void)stepOutputRow;
-(void)finalizeConstraints;
-(id)outputValue;
-(void)applyKeySort:(BOOL)arg1 ;
-(id)outputKey;
-(BOOL)checkCurrentRow;
-(id)currentIndexedValue;
-(BOOL)currentIndexedRowSatisfiesConstraints;
-(void)applyRowIdConstraint:(int)arg1 withArgument:(id)arg2 ;
-(void)stayOnOrStepToOutputRow;
-(BOOL)currentIndexEof;
-(void)stepIndexedRow;
-(void)applyRowIdSort:(BOOL)arg1 ;
-(BOOL)outputEof;
@end

