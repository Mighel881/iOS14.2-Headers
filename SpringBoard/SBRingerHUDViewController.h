//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun 22 2020 21:25:24).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <SpringBoard/SBHUDViewControlling-Protocol.h>
#import <SpringBoard/UIViewControllerTransitioningDelegate-Protocol.h>

@class NSString, NSTimer, SBRingerPillView, UIViewFloatAnimatableProperty;
@protocol SBRingerHUDViewControllerDelegate;

@interface SBRingerHUDViewController : UIViewController <UIViewControllerTransitioningDelegate, SBHUDViewControlling>
{
    _Bool _ringerSilent;
    _Bool _lastEventIsAVolumeChange;
    float _volume;
    id <SBRingerHUDViewControllerDelegate> _delegate;
    SBRingerPillView *_pillView;
    UIViewFloatAnimatableProperty *_positionSpring;
    UIViewFloatAnimatableProperty *_ringerValueSpring;
    NSTimer *_dismissalTimer;
    double _overshoot;
}


// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <SBRingerHUDViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSTimer *dismissalTimer; // @synthesize dismissalTimer=_dismissalTimer;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool lastEventIsAVolumeChange; // @synthesize lastEventIsAVolumeChange=_lastEventIsAVolumeChange;
@property(nonatomic) double overshoot; // @synthesize overshoot=_overshoot;
@property(retain, nonatomic) SBRingerPillView *pillView; // @synthesize pillView=_pillView;
@property(retain, nonatomic) UIViewFloatAnimatableProperty *positionSpring; // @synthesize positionSpring=_positionSpring;
@property(readonly, nonatomic, getter=isPresented) _Bool presented;
@property(nonatomic) _Bool ringerSilent; // @synthesize ringerSilent=_ringerSilent;
@property(retain, nonatomic) UIViewFloatAnimatableProperty *ringerValueSpring; // @synthesize ringerValueSpring=_ringerValueSpring;
@property(readonly) Class superclass;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@end

