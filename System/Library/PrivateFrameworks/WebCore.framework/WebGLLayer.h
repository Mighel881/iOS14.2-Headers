/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:37:03 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <WebCore/WebCore-Structs.h>
#import <QuartzCore/CALayer.h>

@interface WebGLLayer : CALayer {

	float _devicePixelRatio;
	unique_ptr<WebCore::IOSurface, std::__1::default_delete<WebCore::IOSurface> >* _contentsBuffer;
	unique_ptr<WebCore::IOSurface, std::__1::default_delete<WebCore::IOSurface> >* _drawingBuffer;
	unique_ptr<WebCore::IOSurface, std::__1::default_delete<WebCore::IOSurface> >* _spareBuffer;
	IntSize _bufferSize;
	BOOL _usingAlpha;
	void* _eglDisplay;
	void* _eglConfig;
	void* _contentsPbuffer;
	void* _drawingPbuffer;
	void* _sparePbuffer;
	void* _latchedPbuffer;
	BOOL _preparedForDisplay;
	NakedPtr<WebCore::GraphicsContextGLOpenGL>* _context;

}

@property (assign,nonatomic) NakedPtr<WebCore::GraphicsContextGLOpenGL>* context;              //@synthesize context=_context - In the implementation block
-(void)prepareForDisplay;
-(void)setTransform:(CATransform3D)arg1 ;
-(void)setAnchorPoint:(CGPoint)arg1 ;
-(void)display;
-(NakedPtr<WebCore::GraphicsContextGLOpenGL>*)context;
-(void)releaseGLResources;
-(id)initWithGraphicsContextGL:(NakedPtr<WebCore::GraphicsContextGLOpenGL>*)arg1 ;
-(void)setEGLDisplay:(void*)arg1 config:(void*)arg2 ;
-(BOOL)allocateIOSurfaceBackingStoreWithSize:(IntSize)arg1 usingAlpha:(BOOL)arg2 ;
-(void)bindFramebufferToNextAvailableSurface;
-(CGImageRef)copyImageSnapshotWithColorSpace:(CGColorSpaceRef)arg1 ;
-(void)setContext:(NakedPtr<WebCore::GraphicsContextGLOpenGL>*)arg1 ;
@end

