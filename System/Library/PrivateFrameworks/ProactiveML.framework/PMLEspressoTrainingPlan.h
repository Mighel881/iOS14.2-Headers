/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:47:15 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/ProactiveML.framework/ProactiveML
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/PMLPlanProtocol.h>

@protocol ETDataProvider;
@class NSString, ETTaskDefinition, PMLMetaTrainingVariables, PMLEspressoTrainingVariables;

@interface PMLEspressoTrainingPlan : NSObject <PMLPlanProtocol> {

	NSString* _planId;
	ETTaskDefinition* _taskDefinition;
	PMLMetaTrainingVariables* _mtv;
	PMLEspressoTrainingVariables* _etv;
	id<ETDataProvider> _trainingPredictions;
	id<ETDataProvider> _groundTruth;

}

@property (nonatomic,readonly) NSString * planId;                   //@synthesize planId=_planId - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(int)argmax:(id)arg1 ;
+(id)_calculateTrainingMetricsWithSamplingProb:(double)arg1 groundTruthProvider:(id)arg2 predictionsProvider:(id)arg3 trueLabelName:(id)arg4 trainingOutputName:(id)arg5 lossValueName:(id)arg6 probThreshold:(double)arg7 ;
+(BOOL)isValidGradient:(id)arg1 error:(id*)arg2 ;
+(id)_calculateGradientInPlaceForTask:(id)arg1 startingParameters:(id)arg2 globalNames:(id)arg3 weightNames:(id)arg4 biasNames:(id)arg5 ;
+(id)_getModelParametersForTask:(id)arg1 globalNames:(id)arg2 weightNames:(id)arg3 biasNames:(id)arg4 error:(id*)arg5 ;
+(unsigned long long)numberOfParametersInTensor:(id)arg1 ;
+(id)_iterateModelParametersForTask:(id)arg1 globalNames:(id)arg2 weightNames:(id)arg3 biasNames:(id)arg4 block:(/*^block*/id)arg5 ;
-(NSString *)planId;
-(id)init;
-(NSString *)description;
-(BOOL)isEqual:(id)arg1 ;
-(id)toPlistWithChunks:(id)arg1 ;
-(id)initWithPlist:(id)arg1 chunks:(id)arg2 context:(id)arg3 ;
-(id)runWithError:(id*)arg1 ;
-(id)initWithMetaTrainingVariables:(id)arg1 espressoTrainingVariables:(id)arg2 ;
-(id)_newTaskForTraining;
-(/*^block*/id)_updateResultsReferenceCallback:(id)arg1 ;
-(BOOL)isEqualToEspressoTrainingPlan:(id)arg1 ;
@end

