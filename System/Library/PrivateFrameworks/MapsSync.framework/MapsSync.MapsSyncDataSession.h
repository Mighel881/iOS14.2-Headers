/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, November 11, 2020 at 12:38:31 PM Eastern Standard Time
                       * Operating System: Version 14.2 (Build 18B92)
                       * Image Source: /System/Library/PrivateFrameworks/MapsSync.framework/MapsSync
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@class NSString;

@interface MapsSync.MapsSyncDataSession : NSObject {

	 _dataContainer;
	 _containerQueue;
	 _storeLoadInterval;
	 _readContext;
	 _backgroundReadContext;
	 _writeContext;
	 _localOnly;
	 _loadSemaphore;
	 _hasLoadedStores;
	 _pendingReadContextFetches;
	 _pendingBackgroundReadContextFetches;
	 _pendingWriteContextFetches;
	 _contextFetchLock;

}

@property (readonly,nonatomic) NSString * typeString; 
+(void)setUseInMemoryOnly:(BOOL)arg1 ;
+(BOOL)shouldRetryStoreLoadAfterErrorWithError:(id)arg1 ;
+(void)resetWithCompletion:(/*^block*/id)arg1 ;
+(BOOL)isInMemoryOnly;
+(BOOL)shouldMoveStoreAsideWithError:(id)arg1 ;
+(void)reset;
+(id)defaultSession;
+(void)enableNotifications;
+(void)resumeNotifications;
+(void)disableNotifications;
+(id)defaultLocalOnlySession;
+(void)startXPCServer;
+(void)suppressNotifications;
+(BOOL)useInMemoryOnly;
-(id)unsafeGetWriteContextAndReturnError:(id*)arg1 ;
-(void)whenReadyWithCompletion:(/*^block*/id)arg1 ;
-(void)loadStoresWithCompletion:(/*^block*/id)arg1 ;
-(id)init;
-(void)deleteAll;
-(void)getBackgroundReadContextWithCompletion:(/*^block*/id)arg1 ;
-(NSString *)typeString;
-(id)unsafeGetReadContextAndReturnError:(id*)arg1 ;
-(void)getWriteContextWithCompletion:(/*^block*/id)arg1 ;
-(void)resetInMemoryStore;
-(void)contextDidSaveWithNotification:(id)arg1 ;
-(void)getReadContextWithCompletion:(/*^block*/id)arg1 ;
-(void)resetInMemoryStoreWithCompletion:(/*^block*/id)arg1 ;
-(void)checkStoreLoadedWithCompletion:(/*^block*/id)arg1 ;
-(id)unsafeGetBackgroundReadContextAndReturnError:(id*)arg1 ;
-(void)remoteChangeWithNotification:(id)arg1 ;
-(BOOL)hasLoadedStore;
-(id)initWithPersisted:(BOOL)arg1 deviceLocal:(BOOL)arg2 ;
@end

